[
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2022-07-30T14:38:13.852Z",
        "before": [
          {
            "result": {
              "duration": 989700,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 5,
        "name": "sunny path with all API\u0027s",
        "description": " From user to creating posts to making comments on posts",
        "id": "integration-test;sunny-path-with-all-api-s",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 674751800,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 61512600,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 1083155300,
              "status": "passed"
            },
            "line": 12,
            "name": "Get the resources from endpoint \"/users/1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/1\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 974200,
              "status": "passed"
            },
            "line": 13,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1880971800,
              "status": "passed"
            },
            "line": 14,
            "name": "verify response body of users with data \"[VALID_USER_IN_SYS]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER_IN_SYS]\"",
                  "offset": 40
                }
              ],
              "location": "stepDefinitions.UsersSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 43947200,
              "status": "passed"
            },
            "line": 16,
            "name": "set request body for posts using data \"[VALID_POST]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 348169500,
              "status": "passed"
            },
            "line": 17,
            "name": "POST the resource to endpoint \"/users/1/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/1/posts\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 49798800,
              "status": "passed"
            },
            "line": 19,
            "name": "verify response body of users with data \"[VALID_POST]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST]\"",
                  "offset": 40
                }
              ],
              "location": "stepDefinitions.UsersSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36135600,
              "status": "passed"
            },
            "line": 21,
            "name": "set request body for comments using data \"[VALID_COMMENT]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT]\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 284718900,
              "status": "passed"
            },
            "line": 22,
            "name": "POST the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 978900,
              "status": "passed"
            },
            "line": 23,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 82032700,
              "status": "passed"
            },
            "line": 24,
            "name": "verify response body of comments with data \"[VALID_COMMENT]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT]\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.CommentsSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:18.484Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 26,
        "name": "Try accessing comments of other posts. That is access comment of post 1 from post 2.",
        "description": "",
        "id": "integration-test;try-accessing-comments-of-other-posts.-that-is-access-comment-of-post-1-from-post-2.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1949500,
              "status": "passed"
            },
            "line": 28,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 981000,
              "status": "passed"
            },
            "line": 29,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 30,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 291537200,
              "status": "passed"
            },
            "line": 33,
            "name": "Get the resources from endpoint \"/posts/2/comment/1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/2/comment/1\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 969800,
              "status": "passed"
            },
            "line": 34,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 976500,
              "status": "passed"
            },
            "line": 35,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:18.787Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 37,
        "name": "Try accessing posts of other users. That is access posts of user 1 from user 2.",
        "description": "",
        "id": "integration-test;try-accessing-posts-of-other-users.-that-is-access-posts-of-user-1-from-user-2.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 980800,
              "status": "passed"
            },
            "line": 39,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 973800,
              "status": "passed"
            },
            "line": 40,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 41,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 274386300,
              "status": "passed"
            },
            "line": 44,
            "name": "Get the resources from endpoint \"/users/2/posts/1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/2/posts/1\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 45,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 46,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@apiTesting"
          }
        ]
      }
    ],
    "name": "Integration test",
    "description": "  I want to use this template for my feature file",
    "id": "integration-test",
    "keyword": "Feature",
    "uri": "file:src/test/resources/FeatureFiles/APIIntegratedTests.feature",
    "tags": [
      {
        "name": "@apiTesting",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "line": 6,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:19.070Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 15,
        "name": "Sunny Path Scenario",
        "description": "end to end crud flow for comments",
        "id": "e2e-testing-of-comments-endpoint;sunny-path-scenario",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 28430900,
              "status": "passed"
            },
            "line": 18,
            "name": "set request body for comments using data \"[VALID_COMMENT]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT]\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 282475200,
              "status": "passed"
            },
            "line": 19,
            "name": "POST the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 20,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 53705500,
              "status": "passed"
            },
            "line": 21,
            "name": "verify response body of comments with data \"[VALID_COMMENT]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT]\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.CommentsSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 296279400,
              "status": "passed"
            },
            "line": 23,
            "name": "Get the resources from endpoint \"/comments/[COMMENT_ID]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/[COMMENT_ID]\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027404\u0027 differes from expected code \u0027200\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 200(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/E2E.feature:24)\r\n",
              "duration": 1953100,
              "status": "failed"
            },
            "line": 24,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 965700,
              "status": "skipped"
            },
            "line": 25,
            "name": "verify response body of comments with data \"[VALID_COMMENT]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT]\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.CommentsSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "set request body for users using data \"[VALID_COMMENT_UPDATE]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT_UPDATE]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "PATCH the resource to endpoint \"/comments/[COMMENT_ID]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/[COMMENT_ID]\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "verify response body of comments with data \"[VALID_COMMENT_UPDATE]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT_UPDATE]\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.CommentsSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "DELETE the resource to endpoint \"/comments/[COMMENT_ID]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/[COMMENT_ID]\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 978500,
              "status": "skipped"
            },
            "line": 33,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "Get the resources from endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 974800,
              "status": "skipped"
            },
            "line": 37,
            "name": "verify id \"[COMMENT_ID]\" is not available in response",
            "match": {
              "arguments": [
                {
                  "val": "\"[COMMENT_ID]\"",
                  "offset": 10
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_id_is_not_available_in_response(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@e2e"
          },
          {
            "name": "@e2eComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          },
          {
            "name": "@sceanrio1"
          }
        ]
      },
      {
        "line": 6,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 976900,
              "status": "passed"
            },
            "line": 8,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:19.751Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 39,
        "name": "validate existing data when accesed using GET",
        "description": "",
        "id": "e2e-testing-of-comments-endpoint;validate-existing-data-when-accesed-using-get",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 171967000,
              "status": "passed"
            },
            "line": 41,
            "name": "Get the resources from endpoint \"/comments/1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/1\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 46867400,
              "status": "passed"
            },
            "line": 42,
            "name": "verify response body of comments with data \"[VALID_COMMENT_IN_SYS]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT_IN_SYS]\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.CommentsSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@e2e"
          },
          {
            "name": "@e2eComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 6,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 975900,
              "status": "passed"
            },
            "line": 8,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 973900,
              "status": "passed"
            },
            "line": 9,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:19.977Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 44,
        "name": "validate lists of commensts does not have unknown comment id",
        "description": "",
        "id": "e2e-testing-of-comments-endpoint;validate-lists-of-commensts-does-not-have-unknown-comment-id",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 113266800,
              "status": "passed"
            },
            "line": 46,
            "name": "Get the resources from endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10740800,
              "status": "passed"
            },
            "line": 47,
            "name": "verify id \"800\" is not available in response",
            "match": {
              "arguments": [
                {
                  "val": "\"800\"",
                  "offset": 10
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_id_is_not_available_in_response(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@e2e"
          },
          {
            "name": "@e2eComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 6,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1980800,
              "status": "passed"
            },
            "line": 8,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:20.109Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 50,
        "name": "validate response after patching. Changing values of comment id  5",
        "description": "",
        "id": "e2e-testing-of-comments-endpoint;validate-response-after-patching.-changing-values-of-comment-id--5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 25397200,
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for comments using data \"[VALID_COMMENT_IN_SYS]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT_IN_SYS]\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 277315800,
              "status": "passed"
            },
            "line": 53,
            "name": "PATCH the resource to endpoint \"/comments/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/5\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 54,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: Maps do not match for key:name actual:vero eaque aliquid doloribus et culpa expected:id labore ex et quam laborum\r\n\tat org.testng.Assert.fail(Assert.java:110)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1967)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1925)\r\n\tat functionalities.Comments.verifyResponseJsonString(Comments.java:61)\r\n\tat stepDefinitions.CommentsSD.verify_response_body_of_users_with_data(CommentsSD.java:16)\r\n\tat ✽.verify response body of comments with data \"[VALID_COMMENT_IN_SYS]\"(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/E2E.feature:55)\r\n",
              "duration": 46868900,
              "status": "failed"
            },
            "line": 55,
            "name": "verify response body of comments with data \"[VALID_COMMENT_IN_SYS]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT_IN_SYS]\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.CommentsSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@e2e"
          },
          {
            "name": "@e2eComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      }
    ],
    "name": "E2E testing of Comments endpoint",
    "description": "Create, read, update and delete a comment and validate data",
    "id": "e2e-testing-of-comments-endpoint",
    "keyword": "Feature",
    "uri": "file:src/test/resources/FeatureFiles/Comments/E2E.feature",
    "tags": [
      {
        "name": "@e2e",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@e2eComments",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 6
        }
      },
      {
        "name": "@comments",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 19
        }
      },
      {
        "name": "@apiTesting",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 29
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2022-07-30T14:38:20.468Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 18,
        "name": "provide invalid informations and validate expected error messages for GET methods",
        "description": "",
        "id": "validation-of-comments-endpoint;provide-invalid-informations-and-validate-expected-error-messages-for-get-methods;;2",
        "after": [
          {
            "result": {
              "duration": 975100,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 969900,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 983500,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 285356900,
              "status": "passed"
            },
            "line": 12,
            "name": "Get the resources from endpoint \"/comments/800\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/800\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:20.773Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 19,
        "name": "provide invalid informations and validate expected error messages for GET methods",
        "description": "",
        "id": "validation-of-comments-endpoint;provide-invalid-informations-and-validate-expected-error-messages-for-get-methods;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 976400,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 970600,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 102463900,
              "status": "passed"
            },
            "line": 12,
            "name": "Get the resources from endpoint \"/comments/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 957400,
              "status": "passed"
            },
            "line": 13,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:20.882Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 20,
        "name": "provide invalid informations and validate expected error messages for GET methods",
        "description": "",
        "id": "validation-of-comments-endpoint;provide-invalid-informations-and-validate-expected-error-messages-for-get-methods;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 983500,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 974800,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 283576400,
              "status": "passed"
            },
            "line": 12,
            "name": "Get the resources from endpoint \"/comments?postId\u003d5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments?postId\u003d5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:21.173Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 38,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 976600,
              "status": "passed"
            },
            "line": 26,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 28,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 16584700,
              "status": "passed"
            },
            "line": 31,
            "name": "set request body for comments using data \"[VALID_COMMENT]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT]\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 270389900,
              "status": "passed"
            },
            "line": 32,
            "name": "POST the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 33,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 34,
            "name": "verify the status text is \"Created\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Created\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:21.468Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 39,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 969900,
              "status": "passed"
            },
            "line": 26,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 28,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 31,
            "name": "set request body for comments using data \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 265113600,
              "status": "passed"
            },
            "line": 32,
            "name": "POST the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027201\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:33)\r\n",
              "status": "failed"
            },
            "line": 33,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:21.740Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 40,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 969300,
              "status": "passed"
            },
            "line": 26,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 972300,
              "status": "passed"
            },
            "line": 27,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 28,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 31,
            "name": "set request body for comments using data \"name :\u003dJo\"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003dJo\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 387834800,
              "status": "passed"
            },
            "line": 32,
            "name": "POST the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027201\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:33)\r\n",
              "duration": 958300,
              "status": "failed"
            },
            "line": 33,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:22.136Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 41,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 964400,
              "status": "passed"
            },
            "line": 26,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 975600,
              "status": "passed"
            },
            "line": 27,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 28,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 31,
            "name": "set request body for comments using data \"body :\u003d asdgkldsg\"",
            "match": {
              "arguments": [
                {
                  "val": "\"body :\u003d asdgkldsg\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 303706800,
              "status": "passed"
            },
            "line": 32,
            "name": "POST the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027201\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:33)\r\n",
              "duration": 962300,
              "status": "failed"
            },
            "line": 33,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:22.445Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 42,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 26,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 28,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 971700,
              "status": "passed"
            },
            "line": 31,
            "name": "set request body for comments using data \"email :\u003d asfkal@gssv.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d asfkal@gssv.com\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 266587300,
              "status": "passed"
            },
            "line": 32,
            "name": "POST the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027201\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:33)\r\n",
              "duration": 969900,
              "status": "failed"
            },
            "line": 33,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:22.720Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 43,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;7",
        "after": [
          {
            "result": {
              "duration": 976500,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1955200,
              "status": "passed"
            },
            "line": 26,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 976000,
              "status": "passed"
            },
            "line": 27,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 28,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 19562600,
              "status": "passed"
            },
            "line": 31,
            "name": "set request body for comments using data \"[INVALID_COMMENT]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[INVALID_COMMENT]\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 307048700,
              "status": "passed"
            },
            "line": 32,
            "name": "POST the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027201\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:33)\r\n",
              "duration": 981100,
              "status": "failed"
            },
            "line": 33,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:23.055Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 59,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 980300,
              "status": "passed"
            },
            "line": 47,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 980200,
              "status": "passed"
            },
            "line": 48,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 49,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 15631000,
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for comments using data \"[VALID_COMMENT]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT]\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104786700,
              "status": "passed"
            },
            "line": 53,
            "name": "PUT the resource to endpoint \"/comments/501\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/501\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027404\u0027 differes from expected code \u0027201\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 201(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:54)\r\n",
              "duration": 972200,
              "status": "failed"
            },
            "line": 54,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 988900,
              "status": "skipped"
            },
            "line": 55,
            "name": "verify the status text is \"Created\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Created\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:23.184Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 60,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 980900,
              "status": "passed"
            },
            "line": 47,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 978900,
              "status": "passed"
            },
            "line": 48,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 49,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 15642700,
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for comments using data \"[VALID_COMMENT]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT]\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 110338600,
              "status": "passed"
            },
            "line": 53,
            "name": "PUT the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027201\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 201(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:54)\r\n",
              "status": "failed"
            },
            "line": 54,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "verify the status text is \"Created\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Created\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:23.318Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 61,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 972300,
              "status": "passed"
            },
            "line": 47,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 984200,
              "status": "passed"
            },
            "line": 48,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 49,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 976300,
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for comments using data \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103820900,
              "status": "passed"
            },
            "line": 53,
            "name": "PUT the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:54)\r\n",
              "status": "failed"
            },
            "line": 54,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 970200,
              "status": "skipped"
            },
            "line": 55,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:23.429Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 62,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 973800,
              "status": "passed"
            },
            "line": 47,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 48,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 49,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for comments using data \"name :\u003dJo \"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003dJo \"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 98039600,
              "status": "passed"
            },
            "line": 53,
            "name": "PUT the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:54)\r\n",
              "duration": 991800,
              "status": "failed"
            },
            "line": 54,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:23.534Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 63,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 980800,
              "status": "passed"
            },
            "line": 47,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 974600,
              "status": "passed"
            },
            "line": 48,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 49,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for comments using data \"body :\u003d adgsd\"",
            "match": {
              "arguments": [
                {
                  "val": "\"body :\u003d adgsd\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 102766000,
              "status": "passed"
            },
            "line": 53,
            "name": "PUT the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:54)\r\n",
              "status": "failed"
            },
            "line": 54,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:23.644Z",
        "before": [
          {
            "result": {
              "duration": 988200,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 64,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 47,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 48,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 49,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 986700,
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for comments using data \"email :\u003d asfkal@gssv.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d asfkal@gssv.com\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 109789200,
              "status": "passed"
            },
            "line": 53,
            "name": "PUT the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:54)\r\n",
              "status": "failed"
            },
            "line": 54,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 983900,
              "status": "skipped"
            },
            "line": 55,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:23.763Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 65,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 981000,
              "status": "passed"
            },
            "line": 47,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 48,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 49,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 17585000,
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for comments using data \"[INVALID_COMMENT]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[INVALID_COMMENT]\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95696900,
              "status": "passed"
            },
            "line": 53,
            "name": "PUT the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:54)\r\n",
              "status": "failed"
            },
            "line": 54,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:23.884Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 81,
        "name": "provide valid ,invalid informations or missing request body for patching comments",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-comments;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 983500,
              "status": "passed"
            },
            "line": 69,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 985200,
              "status": "passed"
            },
            "line": 70,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 71,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 17565200,
              "status": "passed"
            },
            "line": 74,
            "name": "set request body for comments using data \"[VALID_COMMENT_UPDATE]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT_UPDATE]\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 147996900,
              "status": "passed"
            },
            "line": 75,
            "name": "PATCH the resource to endpoint \"/comments/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/5\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 76,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 77,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:24.059Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 82,
        "name": "provide valid ,invalid informations or missing request body for patching comments",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-comments;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 69,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 70,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 71,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 74,
            "name": "set request body for comments using data \"name :\u003dJo\"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003dJo\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 292166700,
              "status": "passed"
            },
            "line": 75,
            "name": "PATCH the resource to endpoint \"/comments/6\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/6\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 76,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 982000,
              "status": "passed"
            },
            "line": 77,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:24.355Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 83,
        "name": "provide valid ,invalid informations or missing request body for patching comments",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-comments;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 974500,
              "status": "passed"
            },
            "line": 69,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 70,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 71,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 74,
            "name": "set request body for comments using data \"body :\u003d adfgf\"",
            "match": {
              "arguments": [
                {
                  "val": "\"body :\u003d adfgf\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100652000,
              "status": "passed"
            },
            "line": 75,
            "name": "PATCH the resource to endpoint \"/comments/7\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/7\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 76,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 77,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:24.462Z",
        "before": [
          {
            "result": {
              "duration": 976000,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 84,
        "name": "provide valid ,invalid informations or missing request body for patching comments",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-comments;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 69,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 986300,
              "status": "passed"
            },
            "line": 70,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 71,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 74,
            "name": "set request body for comments using data \"email :\u003d asfkal@gssv.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d asfkal@gssv.com\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 305609000,
              "status": "passed"
            },
            "line": 75,
            "name": "PATCH the resource to endpoint \"/comments/8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/8\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 76,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 77,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:24.771Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 85,
        "name": "provide valid ,invalid informations or missing request body for patching comments",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-comments;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 988700,
              "status": "passed"
            },
            "line": 69,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 70,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 71,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 964600,
              "status": "passed"
            },
            "line": 74,
            "name": "set request body for comments using data \"email :\u003d asfkal@gssv.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d asfkal@gssv.com\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 256817100,
              "status": "passed"
            },
            "line": 75,
            "name": "PATCH the resource to endpoint \"/comments/5000\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/5000\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 76,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 77,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:25.033Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 86,
        "name": "provide valid ,invalid informations or missing request body for patching comments",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-comments;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 978400,
              "status": "passed"
            },
            "line": 69,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 977200,
              "status": "passed"
            },
            "line": 70,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 71,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 74,
            "name": "set request body for comments using data \"email :\u003d asfkal@gssv.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d asfkal@gssv.com\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 101243200,
              "status": "passed"
            },
            "line": 75,
            "name": "PATCH the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027404\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 404(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:76)\r\n",
              "status": "failed"
            },
            "line": 76,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 967300,
              "status": "skipped"
            },
            "line": 77,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:25.141Z",
        "before": [
          {
            "result": {
              "duration": 978700,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 87,
        "name": "provide valid ,invalid informations or missing request body for patching comments",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-comments-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-comments;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 985700,
              "status": "passed"
            },
            "line": 69,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 970400,
              "status": "passed"
            },
            "line": 70,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 71,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 12688400,
              "status": "passed"
            },
            "line": 74,
            "name": "set request body for comments using data \"[INVALID_COMMENT]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[INVALID_COMMENT]\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 260762900,
              "status": "passed"
            },
            "line": 75,
            "name": "PATCH the resource to endpoint \"/comments/10\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/10\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:76)\r\n",
              "status": "failed"
            },
            "line": 76,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:25.425Z",
        "before": [
          {
            "result": {
              "duration": 982600,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 102,
        "name": "Delete comments and validate responses",
        "description": "Method - DELETE",
        "id": "validation-of-comments-endpoint;delete-comments-and-validate-responses;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 978100,
              "status": "passed"
            },
            "line": 91,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 92,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 93,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 276021600,
              "status": "passed"
            },
            "line": 96,
            "name": "DELETE the resource to endpoint \"/comments/800\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/800\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027404\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 404(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:97)\r\n",
              "duration": 970000,
              "status": "failed"
            },
            "line": 97,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:25.709Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 103,
        "name": "Delete comments and validate responses",
        "description": "Method - DELETE",
        "id": "validation-of-comments-endpoint;delete-comments-and-validate-responses;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 979000,
              "status": "passed"
            },
            "line": 91,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 92,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 93,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 281169600,
              "status": "passed"
            },
            "line": 96,
            "name": "DELETE the resource to endpoint \"/comments/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 955100,
              "status": "passed"
            },
            "line": 97,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 98,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:25.994Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 104,
        "name": "Delete comments and validate responses",
        "description": "Method - DELETE",
        "id": "validation-of-comments-endpoint;delete-comments-and-validate-responses;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1958100,
              "status": "passed"
            },
            "line": 91,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 959100,
              "status": "passed"
            },
            "line": 92,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 93,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 259676500,
              "status": "passed"
            },
            "line": 96,
            "name": "DELETE the resource to endpoint \"/comments/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027404\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 404(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:97)\r\n",
              "duration": 976300,
              "status": "failed"
            },
            "line": 97,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:26.261Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 105,
        "name": "Delete comments and validate responses",
        "description": "Method - DELETE",
        "id": "validation-of-comments-endpoint;delete-comments-and-validate-responses;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 978600,
              "status": "passed"
            },
            "line": 91,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 92,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 93,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 253022500,
              "status": "passed"
            },
            "line": 96,
            "name": "DELETE the resource to endpoint \"/comments?postId\u003d5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments?postId\u003d5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 97,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 98,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:26.520Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 120,
        "name": "response headers validations for comments endpoints",
        "description": "",
        "id": "validation-of-comments-endpoint;response-headers-validations-for-comments-endpoints;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 970800,
              "status": "passed"
            },
            "line": 110,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 111,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 112,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 116345800,
              "status": "passed"
            },
            "line": 115,
            "name": "Get the resources from endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 116,
            "name": "verify response headers \"Content-Type :\u003d application/json; charset\u003dutf-8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Content-Type :\u003d application/json; charset\u003dutf-8\"",
                  "offset": 24
                }
              ],
              "location": "stepDefinitions.ReusableSD.veriifyResponseHeaders(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:26.642Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 121,
        "name": "response headers validations for comments endpoints",
        "description": "",
        "id": "validation-of-comments-endpoint;response-headers-validations-for-comments-endpoints;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 993000,
              "status": "passed"
            },
            "line": 110,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 974800,
              "status": "passed"
            },
            "line": 111,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 112,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 211505900,
              "status": "passed"
            },
            "line": 115,
            "name": "Get the resources from endpoint \"/comments/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 116,
            "name": "verify response headers \"Content-Type :\u003d application/json; charset\u003dutf-8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Content-Type :\u003d application/json; charset\u003dutf-8\"",
                  "offset": 24
                }
              ],
              "location": "stepDefinitions.ReusableSD.veriifyResponseHeaders(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:26.859Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 122,
        "name": "response headers validations for comments endpoints",
        "description": "",
        "id": "validation-of-comments-endpoint;response-headers-validations-for-comments-endpoints;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 110,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 975700,
              "status": "passed"
            },
            "line": 111,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 112,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 112743500,
              "status": "passed"
            },
            "line": 115,
            "name": "Get the resources from endpoint \"/comments?postId\u003d5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments?postId\u003d5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 116,
            "name": "verify response headers \"Content-Type :\u003d application/json; charset\u003dutf-8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Content-Type :\u003d application/json; charset\u003dutf-8\"",
                  "offset": 24
                }
              ],
              "location": "stepDefinitions.ReusableSD.veriifyResponseHeaders(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:26.977Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 137,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-comments-endpoint;verification-of-search-results;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 984000,
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 976900,
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 1936700,
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"postId :\u003d 1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"postId :\u003d 1\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104338900,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 969300,
              "status": "passed"
            },
            "line": 133,
            "name": "verify comments response result contains only filtered value as \"postId :\u003d 1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"postId :\u003d 1\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.CommentsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:27.091Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 138,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-comments-endpoint;verification-of-search-results;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 981700,
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 978600,
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"id:\u003d1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"id:\u003d1\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 261200900,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 956600,
              "status": "passed"
            },
            "line": 133,
            "name": "verify comments response result contains only filtered value as \"id:\u003d1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"id:\u003d1\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.CommentsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:27.358Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 139,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-comments-endpoint;verification-of-search-results;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 660500,
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1004300,
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"name :\u003d id labore ex et quam laborum\"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003d id labore ex et quam laborum\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103509400,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 985400,
              "status": "passed"
            },
            "line": 133,
            "name": "verify comments response result contains only filtered value as \"name :\u003d id labore ex et quam laborum\"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003d id labore ex et quam laborum\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.CommentsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:27.467Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 140,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-comments-endpoint;verification-of-search-results;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 977000,
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"email :\u003d Eliseo@gardner.biz\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d Eliseo@gardner.biz\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 265174800,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 133,
            "name": "verify comments response result contains only filtered value as \"email :\u003d Eliseo@gardner.biz\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d Eliseo@gardner.biz\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.CommentsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:27.738Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 141,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-comments-endpoint;verification-of-search-results;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 13677400,
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"[COMMENT_FILTER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[COMMENT_FILTER]\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 357677500,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18540200,
              "status": "passed"
            },
            "line": 133,
            "name": "verify comments response result contains only filtered value as \"[COMMENT_FILTER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[COMMENT_FILTER]\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.CommentsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:28.133Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 142,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-comments-endpoint;verification-of-search-results;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 975500,
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 978300,
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 978700,
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"postId :\u003d 1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"postId :\u003d 1\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 304665300,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/posts/1/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/1/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 133,
            "name": "verify comments response result contains only filtered value as \"postId :\u003d 1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"postId :\u003d 1\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.CommentsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:28.444Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 143,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-comments-endpoint;verification-of-search-results;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 968600,
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"id:\u003d1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"id:\u003d1\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 285434100,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/posts/1/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/1/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 980000,
              "status": "passed"
            },
            "line": 133,
            "name": "verify comments response result contains only filtered value as \"id:\u003d1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"id:\u003d1\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.CommentsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:28.734Z",
        "before": [
          {
            "result": {
              "duration": 979300,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 144,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-comments-endpoint;verification-of-search-results;;9",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 973400,
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"name :\u003d id labore ex et quam laborum\"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003d id labore ex et quam laborum\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 271023800,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/posts/1/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/1/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 976800,
              "status": "passed"
            },
            "line": 133,
            "name": "verify comments response result contains only filtered value as \"name :\u003d id labore ex et quam laborum\"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003d id labore ex et quam laborum\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.CommentsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:29.010Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 145,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-comments-endpoint;verification-of-search-results;;10",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 976500,
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 972000,
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"email :\u003d Eliseo@gardner.biz\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d Eliseo@gardner.biz\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 305053000,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/posts/1/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/1/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 969100,
              "status": "passed"
            },
            "line": 133,
            "name": "verify comments response result contains only filtered value as \"email :\u003d Eliseo@gardner.biz\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d Eliseo@gardner.biz\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.CommentsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:29.321Z",
        "before": [
          {
            "result": {
              "duration": 978100,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 146,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-comments-endpoint;verification-of-search-results;;11",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 983600,
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 13661500,
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"[COMMENT_FILTER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[COMMENT_FILTER]\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 96228300,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/posts/1/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/1/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 14640400,
              "status": "passed"
            },
            "line": 133,
            "name": "verify comments response result contains only filtered value as \"[COMMENT_FILTER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[COMMENT_FILTER]\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.CommentsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:29.448Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 162,
        "name": "verification error messgaes for invalid search parameters",
        "description": "expecting 422 - Unprocessable entity",
        "id": "validation-of-comments-endpoint;verification-error-messgaes-for-invalid-search-parameters;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 971400,
              "status": "passed"
            },
            "line": 150,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 982700,
              "status": "passed"
            },
            "line": 151,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 152,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 155,
            "name": "set the parameters as \"postId :\u003d @$\"",
            "match": {
              "arguments": [
                {
                  "val": "\"postId :\u003d @$\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 98646500,
              "status": "passed"
            },
            "line": 156,
            "name": "Get the resources from endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027422\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 422(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:157)\r\n",
              "duration": 945300,
              "status": "failed"
            },
            "line": 157,
            "name": "verify the status code is 422",
            "match": {
              "arguments": [
                {
                  "val": "422",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 158,
            "name": "verify the status text is \"Unprocessable entity\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Unprocessable entity\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:29.556Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 163,
        "name": "verification error messgaes for invalid search parameters",
        "description": "expecting 422 - Unprocessable entity",
        "id": "validation-of-comments-endpoint;verification-error-messgaes-for-invalid-search-parameters;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 975500,
              "status": "passed"
            },
            "line": 150,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 976000,
              "status": "passed"
            },
            "line": 151,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 152,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 155,
            "name": "set the parameters as \"id:\u003d*\u0026%\"",
            "match": {
              "arguments": [
                {
                  "val": "\"id:\u003d*\u0026%\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 271014100,
              "status": "passed"
            },
            "line": 156,
            "name": "Get the resources from endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027422\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 422(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:157)\r\n",
              "duration": 950200,
              "status": "failed"
            },
            "line": 157,
            "name": "verify the status code is 422",
            "match": {
              "arguments": [
                {
                  "val": "422",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 158,
            "name": "verify the status text is \"Unprocessable entity\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Unprocessable entity\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:29.836Z",
        "before": [
          {
            "result": {
              "duration": 976300,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 164,
        "name": "verification error messgaes for invalid search parameters",
        "description": "expecting 422 - Unprocessable entity",
        "id": "validation-of-comments-endpoint;verification-error-messgaes-for-invalid-search-parameters;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 150,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 976500,
              "status": "passed"
            },
            "line": 151,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 152,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 977600,
              "status": "passed"
            },
            "line": 155,
            "name": "set the parameters as \"name :\u003d 4566@#$%^\u0026*8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003d 4566@#$%^\u0026*8\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 266749700,
              "status": "passed"
            },
            "line": 156,
            "name": "Get the resources from endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027422\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 422(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:157)\r\n",
              "duration": 969400,
              "status": "failed"
            },
            "line": 157,
            "name": "verify the status code is 422",
            "match": {
              "arguments": [
                {
                  "val": "422",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 158,
            "name": "verify the status text is \"Unprocessable entity\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Unprocessable entity\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:30.109Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 165,
        "name": "verification error messgaes for invalid search parameters",
        "description": "expecting 422 - Unprocessable entity",
        "id": "validation-of-comments-endpoint;verification-error-messgaes-for-invalid-search-parameters;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 976100,
              "status": "passed"
            },
            "line": 150,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 151,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 152,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 976800,
              "status": "passed"
            },
            "line": 155,
            "name": "set the parameters as \"email :\u003d *\u0026*\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d *\u0026*\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 271288500,
              "status": "passed"
            },
            "line": 156,
            "name": "Get the resources from endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027422\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 422(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/Validation.feature:157)\r\n",
              "status": "failed"
            },
            "line": 157,
            "name": "verify the status code is 422",
            "match": {
              "arguments": [
                {
                  "val": "422",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 972000,
              "status": "skipped"
            },
            "line": 158,
            "name": "verify the status text is \"Unprocessable entity\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Unprocessable entity\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:30.385Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 166,
        "name": "verification error messgaes for invalid search parameters",
        "description": "expecting 422 - Unprocessable entity",
        "id": "validation-of-comments-endpoint;verification-error-messgaes-for-invalid-search-parameters;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 979500,
              "status": "passed"
            },
            "line": 150,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 151,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 152,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 155,
            "name": "set the parameters as \"address :\u003d *\u0026*\"",
            "match": {
              "arguments": [
                {
                  "val": "\"address :\u003d *\u0026*\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99330700,
              "status": "passed"
            },
            "line": 156,
            "name": "Get the resources from endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 157,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 158,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      }
    ],
    "name": "Validation of comments endpoint",
    "description": "",
    "id": "validation-of-comments-endpoint",
    "keyword": "Feature",
    "uri": "file:src/test/resources/FeatureFiles/Comments/Validation.feature",
    "tags": [
      {
        "name": "@error",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@errorComments",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 8
        }
      },
      {
        "name": "@comments",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 23
        }
      },
      {
        "name": "@apiTesting",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 33
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 976200,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 977700,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:30.489Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 13,
        "name": "verify schema and status codes of Comments endpoint using GET method",
        "description": "",
        "id": "comments-schema-and-status-code-validation;verify-schema-and-status-codes-of-comments-endpoint-using-get-method",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 125200400,
              "status": "passed"
            },
            "line": 15,
            "name": "Get the resources from endpoint \"/comments/1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/1\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 332050300,
              "status": "passed"
            },
            "line": 17,
            "name": "Validate the Json Schema for \"comments\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"comments\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Comments"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 978300,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 977400,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:30.953Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 19,
        "name": "verify schema and status codes of comments collection endpoint using GET method",
        "description": "",
        "id": "comments-schema-and-status-code-validation;verify-schema-and-status-codes-of-comments-collection-endpoint-using-get-method",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 107408900,
              "status": "passed"
            },
            "line": 21,
            "name": "Get the resources from endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 22,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 88862300,
              "status": "passed"
            },
            "line": 23,
            "name": "Validate the Json Schema for \"comments\" collection endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"comments\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateCollectionEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Comments"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 983300,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:31.155Z",
        "before": [
          {
            "result": {
              "duration": 965700,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 25,
        "name": "verify schema and status codes for comments endpoint when accessed from comments of postid for GET method",
        "description": "",
        "id": "comments-schema-and-status-code-validation;verify-schema-and-status-codes-for-comments-endpoint-when-accessed-from-comments-of-postid-for-get-method",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 102532900,
              "status": "passed"
            },
            "line": 27,
            "name": "Get the resources from endpoint \"/posts/1/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/1/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 28,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6831700,
              "status": "passed"
            },
            "line": 29,
            "name": "Validate the Json Schema for \"comments\" collection endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"comments\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateCollectionEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Comments"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 978400,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1259100,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:31.272Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 31,
        "name": "verify schema and status codes for comments endpoint when accessed comments from query parameters for GET method",
        "description": "",
        "id": "comments-schema-and-status-code-validation;verify-schema-and-status-codes-for-comments-endpoint-when-accessed-comments-from-query-parameters-for-get-method",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 939200,
              "status": "passed"
            },
            "line": 33,
            "name": "set the parameters as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_parameters_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 34,
              "value": "\tpostId :\u003d 1"
            }
          },
          {
            "result": {
              "duration": 102730300,
              "status": "passed"
            },
            "line": 37,
            "name": "Get the resources from endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 38,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3900800,
              "status": "passed"
            },
            "line": 39,
            "name": "Validate the Json Schema for \"comments\" collection endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"comments\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateCollectionEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Comments"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 973800,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:31.385Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 41,
        "name": "verify schema and status codes for comments endpoint when new comment is made using POST",
        "description": "",
        "id": "comments-schema-and-status-code-validation;verify-schema-and-status-codes-for-comments-endpoint-when-new-comment-is-made-using-post",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14647000,
              "status": "passed"
            },
            "line": 43,
            "name": "set request body for comments using data \"[VALID_COMMENT]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT]\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 271169500,
              "status": "passed"
            },
            "line": 44,
            "name": "POST the resource to endpoint \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 45,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2934000,
              "status": "passed"
            },
            "line": 46,
            "name": "Validate the Json Schema for \"comments\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"comments\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Comments"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 975400,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:31.680Z",
        "before": [
          {
            "result": {
              "duration": 980900,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 48,
        "name": "verify schema and status codes for comments endpoint when new comment is made using PUT. Hence expecting status code 201",
        "description": "\t\tas per standards. 501 id is not available, so when PUT is called to it, they should create new object ",
        "id": "comments-schema-and-status-code-validation;verify-schema-and-status-codes-for-comments-endpoint-when-new-comment-is-made-using-put.-hence-expecting-status-code-201",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13674000,
              "status": "passed"
            },
            "line": 51,
            "name": "set request body for comments using data \"[VALID_COMMENT]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT]\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 95866200,
              "status": "passed"
            },
            "line": 52,
            "name": "PUT the resource to endpoint \"/comments/501\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/501\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027404\u0027 differes from expected code \u0027201\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 201(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/schemaValidation.feature:53)\r\n",
              "duration": 948600,
              "status": "failed"
            },
            "line": 53,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "Validate the Json Schema for \"comments\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"comments\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Comments"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 984300,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 977000,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:31.794Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 56,
        "name": "verify schema and status codes for comments endpoint when comment is edited using PUT",
        "description": "",
        "id": "comments-schema-and-status-code-validation;verify-schema-and-status-codes-for-comments-endpoint-when-comment-is-edited-using-put",
        "after": [
          {
            "result": {
              "duration": 983700,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21471800,
              "status": "passed"
            },
            "line": 58,
            "name": "set request body for comments using data \"[VALID_COMMENT]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT]\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 95851200,
              "status": "passed"
            },
            "line": 59,
            "name": "PUT the resource to endpoint \"/comments/1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/1\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 975500,
              "status": "passed"
            },
            "line": 60,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2903100,
              "status": "passed"
            },
            "line": 61,
            "name": "Validate the Json Schema for \"comments\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"comments\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Comments"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:31.920Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 63,
        "name": "verify schema and status codes for comments endpoint when comment is modified using PATCH",
        "description": "",
        "id": "comments-schema-and-status-code-validation;verify-schema-and-status-codes-for-comments-endpoint-when-comment-is-modified-using-patch",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13669700,
              "status": "passed"
            },
            "line": 65,
            "name": "set request body for comments using data \"[VALID_COMMENT]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_COMMENT]\"",
                  "offset": 41
                }
              ],
              "location": "stepDefinitions.CommentsSD.setCommentRequstBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 268534800,
              "status": "passed"
            },
            "line": 66,
            "name": "PATCH the resource to endpoint \"/comments/2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/2\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 67,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4863900,
              "status": "passed"
            },
            "line": 68,
            "name": "Validate the Json Schema for \"comments\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"comments\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Comments"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 977500,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:32.213Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 70,
        "name": "verify schema and status codes for comments endpoint when comment is deleted using DELETE",
        "description": "when 200 is returned, we expected deleted content to be returned",
        "id": "comments-schema-and-status-code-validation;verify-schema-and-status-codes-for-comments-endpoint-when-comment-is-deleted-using-delete",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 277272500,
              "status": "passed"
            },
            "line": 73,
            "name": "DELETE the resource to endpoint \"/comments/3\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/3\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 74,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nResponse body doesn\u0027t match expectation.\nExpected: The content to match the given JSON schema.\nerror: object has missing required properties ([\"body\",\"email\",\"id\",\"name\",\"postId\"])\n    level: \"error\"\n    schema: {\"loadingURI\":\"#\",\"pointer\":\"\"}\n    instance: {\"pointer\":\"\"}\n    domain: \"validation\"\n    keyword: \"required\"\n    required: [\"body\",\"email\",\"id\",\"name\",\"postId\"]\n    missing: [\"body\",\"email\",\"id\",\"name\",\"postId\"]\n\n  Actual: {}\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:98)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:293)\r\n\tat io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)\r\n\tat functionalities.ReusableAPIFunction.validateSchema(ReusableAPIFunction.java:148)\r\n\tat stepDefinitions.ReusableSD.validateEndPointSchema(ReusableSD.java:74)\r\n\tat ✽.Validate the Json Schema for \"comments\" endpoint(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Comments/schemaValidation.feature:75)\r\n",
              "duration": 25416700,
              "status": "failed"
            },
            "line": 75,
            "name": "Validate the Json Schema for \"comments\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"comments\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Comments"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@comments"
          },
          {
            "name": "@apiTesting"
          }
        ]
      }
    ],
    "name": "Comments Schema and Status Code validation",
    "description": "Verify json schema and status codes for comments endpoints of Jsonplaceholder api",
    "id": "comments-schema-and-status-code-validation",
    "keyword": "Feature",
    "uri": "file:src/test/resources/FeatureFiles/Comments/schemaValidation.feature",
    "tags": [
      {
        "name": "@Comments",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SchemaValidation",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 11
        }
      },
      {
        "name": "@comments",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 29
        }
      },
      {
        "name": "@apiTesting",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 39
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 6,
        "name": "Runs before every scenarios.",
        "description": " these commands sets base url and headers.",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 968200,
              "status": "passed"
            },
            "line": 9,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 996000,
              "status": "passed"
            },
            "line": 10,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 11,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:32.525Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 15,
        "name": "Sunny Path Scenario",
        "description": " end to end crud flow for posts",
        "id": "e2e-testing-of-posts-endpoint;sunny-path-scenario",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16576100,
              "status": "passed"
            },
            "line": 18,
            "name": "set request body for posts using data \"[VALID_POST]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 285739400,
              "status": "passed"
            },
            "line": 19,
            "name": "POST the resource to endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 20,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22168600,
              "status": "passed"
            },
            "line": 21,
            "name": "verify response body of posts with data \"[VALID_POST]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST]\"",
                  "offset": 40
                }
              ],
              "location": "stepDefinitions.PostsSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 263282900,
              "status": "passed"
            },
            "line": 23,
            "name": "Get the resources from endpoint \"/posts/[POST_ID]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/[POST_ID]\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027404\u0027 differes from expected code \u0027200\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 200(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/E2E.feature:24)\r\n",
              "status": "failed"
            },
            "line": 24,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "verify response body of posts with data \"[VALID_POST]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST]\"",
                  "offset": 40
                }
              ],
              "location": "stepDefinitions.PostsSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "set request body for posts using data \"[VALID_POST_UPDATE]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST_UPDATE]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "PATCH the resource to endpoint \"/posts/[POST_ID]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/[POST_ID]\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 974100,
              "status": "skipped"
            },
            "line": 29,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "verify response body of posts with data \"[VALID_POST_UPDATE]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST_UPDATE]\"",
                  "offset": 40
                }
              ],
              "location": "stepDefinitions.PostsSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "DELETE the resource to endpoint \"/posts/[POST_ID]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/[POST_ID]\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 976000,
              "status": "skipped"
            },
            "line": 35,
            "name": "Get the resources from endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "verify id \"[POST_ID]\" is not available in response",
            "match": {
              "arguments": [
                {
                  "val": "\"[POST_ID]\"",
                  "offset": 10
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_id_is_not_available_in_response(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@e2e"
          },
          {
            "name": "@e2ePosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 6,
        "name": "Runs before every scenarios.",
        "description": " these commands sets base url and headers.",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 973800,
              "status": "passed"
            },
            "line": 9,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 978100,
              "status": "passed"
            },
            "line": 10,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 11,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:33.128Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 40,
        "name": "validate existing data when accesed using GET",
        "description": "",
        "id": "e2e-testing-of-posts-endpoint;validate-existing-data-when-accesed-using-get",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 105745800,
              "status": "passed"
            },
            "line": 42,
            "name": "Get the resources from endpoint \"/posts/1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/1\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 24429400,
              "status": "passed"
            },
            "line": 43,
            "name": "verify response body of posts with data \"[VALID_POST_IN_SYS]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST_IN_SYS]\"",
                  "offset": 40
                }
              ],
              "location": "stepDefinitions.PostsSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@e2e"
          },
          {
            "name": "@e2ePosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 6,
        "name": "Runs before every scenarios.",
        "description": " these commands sets base url and headers.",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 980400,
              "status": "passed"
            },
            "line": 9,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 977000,
              "status": "passed"
            },
            "line": 10,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 11,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:33.262Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 45,
        "name": "validate lists of commensts does not have unknown post id",
        "description": "",
        "id": "e2e-testing-of-posts-endpoint;validate-lists-of-commensts-does-not-have-unknown-post-id",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 99605000,
              "status": "passed"
            },
            "line": 47,
            "name": "Get the resources from endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 964200,
              "status": "passed"
            },
            "line": 48,
            "name": "verify id \"800\" is not available in response",
            "match": {
              "arguments": [
                {
                  "val": "\"800\"",
                  "offset": 10
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_id_is_not_available_in_response(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@e2e"
          },
          {
            "name": "@e2ePosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 6,
        "name": "Runs before every scenarios.",
        "description": " these commands sets base url and headers.",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 11,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:33.368Z",
        "before": [
          {
            "result": {
              "duration": 979200,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 51,
        "name": "validate response after patching. Changing values of post id  5",
        "description": "",
        "id": "e2e-testing-of-posts-endpoint;validate-response-after-patching.-changing-values-of-post-id--5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16592300,
              "status": "passed"
            },
            "line": 53,
            "name": "set request body for posts using data \"[VALID_POST_IN_SYS]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST_IN_SYS]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 276065300,
              "status": "passed"
            },
            "line": 54,
            "name": "PATCH the resource to endpoint \"/posts/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/5\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 55,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: Maps do not match for key:title actual:nesciunt quas odio expected:sunt aut facere repellat provident occaecati excepturi optio reprehenderit\r\n\tat org.testng.Assert.fail(Assert.java:110)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1967)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1925)\r\n\tat functionalities.Posts.verifyResponseJsonString(Posts.java:58)\r\n\tat stepDefinitions.PostsSD.verify_response_body_of_users_with_data(PostsSD.java:16)\r\n\tat ✽.verify response body of posts with data \"[VALID_POST_IN_SYS]\"(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/E2E.feature:56)\r\n",
              "duration": 19600000,
              "status": "failed"
            },
            "line": 56,
            "name": "verify response body of posts with data \"[VALID_POST_IN_SYS]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST_IN_SYS]\"",
                  "offset": 40
                }
              ],
              "location": "stepDefinitions.PostsSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@e2e"
          },
          {
            "name": "@e2ePosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      }
    ],
    "name": "E2E testing of posts endpoint",
    "description": "Create, read, update and delete a posts and validate data",
    "id": "e2e-testing-of-posts-endpoint",
    "keyword": "Feature",
    "uri": "file:src/test/resources/FeatureFiles/Posts/E2E.feature",
    "tags": [
      {
        "name": "@e2e",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@e2ePosts",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 6
        }
      },
      {
        "name": "@posts",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 16
        }
      },
      {
        "name": "@apiTesting",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 23
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2022-07-30T14:38:33.686Z",
        "before": [
          {
            "result": {
              "duration": 978500,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 18,
        "name": "provide invalid informations and validate expected error messages for GET methods",
        "description": "",
        "id": "validation-of-posts-endpoint;provide-invalid-informations-and-validate-expected-error-messages-for-get-methods;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 974700,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 262193800,
              "status": "passed"
            },
            "line": 12,
            "name": "Get the resources from endpoint \"/posts/800\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/800\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:33.959Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 19,
        "name": "provide invalid informations and validate expected error messages for GET methods",
        "description": "",
        "id": "validation-of-posts-endpoint;provide-invalid-informations-and-validate-expected-error-messages-for-get-methods;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 985900,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 347855300,
              "status": "passed"
            },
            "line": 12,
            "name": "Get the resources from endpoint \"/posts/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 975200,
              "status": "passed"
            },
            "line": 14,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:34.311Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 20,
        "name": "provide invalid informations and validate expected error messages for GET methods",
        "description": "",
        "id": "validation-of-posts-endpoint;provide-invalid-informations-and-validate-expected-error-messages-for-get-methods;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 977200,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 101858300,
              "status": "passed"
            },
            "line": 12,
            "name": "Get the resources from endpoint \"/posts?uersId\u003d5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts?uersId\u003d5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:34.416Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 38,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 982700,
              "status": "passed"
            },
            "line": 26,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 977700,
              "status": "passed"
            },
            "line": 27,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 28,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 14644700,
              "status": "passed"
            },
            "line": 31,
            "name": "set request body for posts using data \"[VALID_POST]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 256403200,
              "status": "passed"
            },
            "line": 32,
            "name": "POST the resource to endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 33,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 973500,
              "status": "passed"
            },
            "line": 34,
            "name": "verify the status text is \"Created\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Created\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:34.694Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 39,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 977200,
              "status": "passed"
            },
            "line": 26,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 28,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 974600,
              "status": "passed"
            },
            "line": 31,
            "name": "set request body for posts using data \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 258513500,
              "status": "passed"
            },
            "line": 32,
            "name": "POST the resource to endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027201\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:33)\r\n",
              "status": "failed"
            },
            "line": 33,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:34.959Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 40,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 26,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 981500,
              "status": "passed"
            },
            "line": 27,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 28,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 31,
            "name": "set request body for posts using data \"name :\u003dJo\"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003dJo\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 290535400,
              "status": "passed"
            },
            "line": 32,
            "name": "POST the resource to endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027201\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:33)\r\n",
              "duration": 978000,
              "status": "failed"
            },
            "line": 33,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 978300,
              "status": "skipped"
            },
            "line": 34,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:35.254Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 41,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 980600,
              "status": "passed"
            },
            "line": 26,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 975600,
              "status": "passed"
            },
            "line": 27,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 28,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 31,
            "name": "set request body for posts using data \"body :\u003d asdgkldsg\"",
            "match": {
              "arguments": [
                {
                  "val": "\"body :\u003d asdgkldsg\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 265939700,
              "status": "passed"
            },
            "line": 32,
            "name": "POST the resource to endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027201\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:33)\r\n",
              "duration": 971000,
              "status": "failed"
            },
            "line": 33,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:35.526Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 42,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 973100,
              "status": "passed"
            },
            "line": 26,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 28,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 31,
            "name": "set request body for posts using data \"email :\u003d asfkal@gssv.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d asfkal@gssv.com\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 263809000,
              "status": "passed"
            },
            "line": 32,
            "name": "POST the resource to endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027201\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:33)\r\n",
              "status": "failed"
            },
            "line": 33,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:35.796Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 43,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1004700,
              "status": "passed"
            },
            "line": 26,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 28,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 13635400,
              "status": "passed"
            },
            "line": 31,
            "name": "set request body for posts using data \"[INVALID_POST]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[INVALID_POST]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 272175600,
              "status": "passed"
            },
            "line": 32,
            "name": "POST the resource to endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027201\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:33)\r\n",
              "duration": 967600,
              "status": "failed"
            },
            "line": 33,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:36.087Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 59,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 47,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 48,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 49,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 12696400,
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for posts using data \"[VALID_POST]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 272797700,
              "status": "passed"
            },
            "line": 53,
            "name": "PUT the resource to endpoint \"/posts/501\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/501\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027404\u0027 differes from expected code \u0027201\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 201(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:54)\r\n",
              "duration": 986900,
              "status": "failed"
            },
            "line": 54,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "verify the status text is \"Created\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Created\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:36.380Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 60,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 981100,
              "status": "passed"
            },
            "line": 47,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 48,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 49,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 11727700,
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for posts using data \"[VALID_POST]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103386000,
              "status": "passed"
            },
            "line": 53,
            "name": "PUT the resource to endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027201\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 201(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:54)\r\n",
              "status": "failed"
            },
            "line": 54,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "verify the status text is \"Created\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Created\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:36.500Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 61,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 47,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 48,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 49,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for posts using data \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 96805300,
              "status": "passed"
            },
            "line": 53,
            "name": "PUT the resource to endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:54)\r\n",
              "status": "failed"
            },
            "line": 54,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:36.605Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 62,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;5",
        "after": [
          {
            "result": {
              "duration": 975800,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 975200,
              "status": "passed"
            },
            "line": 47,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 48,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 49,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 974000,
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for posts using data \"name :\u003dJo \"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003dJo \"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 134822600,
              "status": "passed"
            },
            "line": 53,
            "name": "PUT the resource to endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:54)\r\n",
              "duration": 975000,
              "status": "failed"
            },
            "line": 54,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:36.747Z",
        "before": [
          {
            "result": {
              "duration": 984000,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 63,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 47,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 48,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 49,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 973500,
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for posts using data \"body :\u003d adgsd\"",
            "match": {
              "arguments": [
                {
                  "val": "\"body :\u003d adgsd\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 106382500,
              "status": "passed"
            },
            "line": 53,
            "name": "PUT the resource to endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:54)\r\n",
              "duration": 978300,
              "status": "failed"
            },
            "line": 54,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:36.861Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 64,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 981500,
              "status": "passed"
            },
            "line": 47,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 985500,
              "status": "passed"
            },
            "line": 48,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 49,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 968000,
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for posts using data \"email :\u003d asfkal@gssv.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d asfkal@gssv.com\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100583200,
              "status": "passed"
            },
            "line": 53,
            "name": "PUT the resource to endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:54)\r\n",
              "status": "failed"
            },
            "line": 54,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:36.968Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 65,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 47,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 999400,
              "status": "passed"
            },
            "line": 48,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 49,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 12664000,
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for posts using data \"[INVALID_POST]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[INVALID_POST]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94722200,
              "status": "passed"
            },
            "line": 53,
            "name": "PUT the resource to endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:54)\r\n",
              "status": "failed"
            },
            "line": 54,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:37.083Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 81,
        "name": "provide valid ,invalid informations or missing request body for patching posts",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-posts;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 982400,
              "status": "passed"
            },
            "line": 69,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 70,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 71,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 13688000,
              "status": "passed"
            },
            "line": 74,
            "name": "set request body for posts using data \"[VALID_POST_UPDATE]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST_UPDATE]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 97804200,
              "status": "passed"
            },
            "line": 75,
            "name": "PATCH the resource to endpoint \"/posts/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/5\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 76,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 77,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:37.203Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 82,
        "name": "provide valid ,invalid informations or missing request body for patching posts",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-posts;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 968300,
              "status": "passed"
            },
            "line": 69,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 70,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 71,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 74,
            "name": "set request body for posts using data \"name :\u003dJo\"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003dJo\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 254587200,
              "status": "passed"
            },
            "line": 75,
            "name": "PATCH the resource to endpoint \"/posts/6\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/6\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:76)\r\n",
              "status": "failed"
            },
            "line": 76,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:37.463Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 83,
        "name": "provide valid ,invalid informations or missing request body for patching posts",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-posts;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 69,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 972000,
              "status": "passed"
            },
            "line": 70,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 71,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 74,
            "name": "set request body for posts using data \"body :\u003d adfgf\"",
            "match": {
              "arguments": [
                {
                  "val": "\"body :\u003d adfgf\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 266289500,
              "status": "passed"
            },
            "line": 75,
            "name": "PATCH the resource to endpoint \"/posts/7\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/7\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 76,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 77,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:37.733Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 84,
        "name": "provide valid ,invalid informations or missing request body for patching posts",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-posts;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 977900,
              "status": "passed"
            },
            "line": 69,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 70,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 71,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 74,
            "name": "set request body for posts using data \"title :\u003d asfkalgssvcom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"title :\u003d asfkalgssvcom\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 265764100,
              "status": "passed"
            },
            "line": 75,
            "name": "PATCH the resource to endpoint \"/posts/8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/8\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 76,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 77,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:38.004Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 85,
        "name": "provide valid ,invalid informations or missing request body for patching posts",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-posts;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 985000,
              "status": "passed"
            },
            "line": 69,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 70,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 71,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 976600,
              "status": "passed"
            },
            "line": 74,
            "name": "set request body for posts using data \"email :\u003d asfkal@gssv.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d asfkal@gssv.com\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 264940000,
              "status": "passed"
            },
            "line": 75,
            "name": "PATCH the resource to endpoint \"/posts/5000\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/5000\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 76,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 77,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:38.274Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 86,
        "name": "provide valid ,invalid informations or missing request body for patching posts",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-posts;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 972900,
              "status": "passed"
            },
            "line": 69,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 70,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 71,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 982100,
              "status": "passed"
            },
            "line": 74,
            "name": "set request body for posts using data \"email :\u003d asfkal@gssv.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d asfkal@gssv.com\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95038400,
              "status": "passed"
            },
            "line": 75,
            "name": "PATCH the resource to endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027404\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 404(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:76)\r\n",
              "status": "failed"
            },
            "line": 76,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:38.374Z",
        "before": [
          {
            "result": {
              "duration": 977600,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 87,
        "name": "provide valid ,invalid informations or missing request body for patching posts",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-posts-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-posts;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 69,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 976500,
              "status": "passed"
            },
            "line": 70,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 71,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 11742300,
              "status": "passed"
            },
            "line": 74,
            "name": "set request body for posts using data \"[INVALID_POST]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[INVALID_POST]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 261502300,
              "status": "passed"
            },
            "line": 75,
            "name": "PATCH the resource to endpoint \"/posts/10\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/10\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:76)\r\n",
              "status": "failed"
            },
            "line": 76,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:38.654Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 102,
        "name": "Delete posts and validate responses",
        "description": "Method - DELETE",
        "id": "validation-of-posts-endpoint;delete-posts-and-validate-responses;;2",
        "after": [
          {
            "result": {
              "duration": 965200,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 91,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 974400,
              "status": "passed"
            },
            "line": 92,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 93,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 247644300,
              "status": "passed"
            },
            "line": 96,
            "name": "DELETE the resource to endpoint \"/posts/800\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/800\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027404\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 404(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:97)\r\n",
              "status": "failed"
            },
            "line": 97,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:38.908Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 103,
        "name": "Delete posts and validate responses",
        "description": "Method - DELETE",
        "id": "validation-of-posts-endpoint;delete-posts-and-validate-responses;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 91,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 92,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 93,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 248062900,
              "status": "passed"
            },
            "line": 96,
            "name": "DELETE the resource to endpoint \"/posts/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 97,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 98,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:39.159Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 104,
        "name": "Delete posts and validate responses",
        "description": "Method - DELETE",
        "id": "validation-of-posts-endpoint;delete-posts-and-validate-responses;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 91,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 976900,
              "status": "passed"
            },
            "line": 92,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 93,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 244579900,
              "status": "passed"
            },
            "line": 96,
            "name": "DELETE the resource to endpoint \"/posts/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027404\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 404(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:97)\r\n",
              "duration": 949000,
              "status": "failed"
            },
            "line": 97,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:39.410Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 105,
        "name": "Delete posts and validate responses",
        "description": "Method - DELETE",
        "id": "validation-of-posts-endpoint;delete-posts-and-validate-responses;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 91,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 92,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 93,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 256880500,
              "status": "passed"
            },
            "line": 96,
            "name": "DELETE the resource to endpoint \"/posts?userId\u003d5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts?userId\u003d5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 97,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 98,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:39.670Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 120,
        "name": "response headers validations for posts endpoints",
        "description": "",
        "id": "validation-of-posts-endpoint;response-headers-validations-for-posts-endpoints;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 979300,
              "status": "passed"
            },
            "line": 110,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 111,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 112,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 88938500,
              "status": "passed"
            },
            "line": 115,
            "name": "Get the resources from endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 985100,
              "status": "passed"
            },
            "line": 116,
            "name": "verify response headers \"Content-Type :\u003d application/json; charset\u003dutf-8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Content-Type :\u003d application/json; charset\u003dutf-8\"",
                  "offset": 24
                }
              ],
              "location": "stepDefinitions.ReusableSD.veriifyResponseHeaders(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:39.764Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 121,
        "name": "response headers validations for posts endpoints",
        "description": "",
        "id": "validation-of-posts-endpoint;response-headers-validations-for-posts-endpoints;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 110,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 978800,
              "status": "passed"
            },
            "line": 111,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 112,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 121690500,
              "status": "passed"
            },
            "line": 115,
            "name": "Get the resources from endpoint \"/posts/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 116,
            "name": "verify response headers \"Content-Type :\u003d application/json; charset\u003dutf-8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Content-Type :\u003d application/json; charset\u003dutf-8\"",
                  "offset": 24
                }
              ],
              "location": "stepDefinitions.ReusableSD.veriifyResponseHeaders(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:39.889Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 122,
        "name": "response headers validations for posts endpoints",
        "description": "",
        "id": "validation-of-posts-endpoint;response-headers-validations-for-posts-endpoints;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 967200,
              "status": "passed"
            },
            "line": 110,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 981500,
              "status": "passed"
            },
            "line": 111,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 112,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 274258700,
              "status": "passed"
            },
            "line": 115,
            "name": "Get the resources from endpoint \"/posts?userId\u003d5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts?userId\u003d5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 116,
            "name": "verify response headers \"Content-Type :\u003d application/json; charset\u003dutf-8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Content-Type :\u003d application/json; charset\u003dutf-8\"",
                  "offset": 24
                }
              ],
              "location": "stepDefinitions.ReusableSD.veriifyResponseHeaders(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:40.169Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 137,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-posts-endpoint;verification-of-search-results;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 965700,
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"userId :\u003d 1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"userId :\u003d 1\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 284399600,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 972100,
              "status": "passed"
            },
            "line": 133,
            "name": "verify posts response result contains only filtered value as \"userId :\u003d 1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"userId :\u003d 1\"",
                  "offset": 61
                }
              ],
              "location": "stepDefinitions.PostsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:40.460Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 138,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-posts-endpoint;verification-of-search-results;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 977100,
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"id:\u003d1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"id:\u003d1\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 138844800,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 984900,
              "status": "passed"
            },
            "line": 133,
            "name": "verify posts response result contains only filtered value as \"id:\u003d1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"id:\u003d1\"",
                  "offset": 61
                }
              ],
              "location": "stepDefinitions.PostsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:40.604Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 139,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-posts-endpoint;verification-of-search-results;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"title :\u003d sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"",
            "match": {
              "arguments": [
                {
                  "val": "\"title :\u003d sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 300518900,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 979400,
              "status": "passed"
            },
            "line": 133,
            "name": "verify posts response result contains only filtered value as \"title :\u003d sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"",
            "match": {
              "arguments": [
                {
                  "val": "\"title :\u003d sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"",
                  "offset": 61
                }
              ],
              "location": "stepDefinitions.PostsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:40.908Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 140,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-posts-endpoint;verification-of-search-results;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 973300,
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 10758900,
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"[POST_FILTER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[POST_FILTER]\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 268550900,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11704200,
              "status": "passed"
            },
            "line": 133,
            "name": "verify posts response result contains only filtered value as \"[POST_FILTER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[POST_FILTER]\"",
                  "offset": 61
                }
              ],
              "location": "stepDefinitions.PostsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:41.202Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 141,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-posts-endpoint;verification-of-search-results;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 975200,
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"userId :\u003d 1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"userId :\u003d 1\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 269449600,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/users/1/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/1/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 954800,
              "status": "passed"
            },
            "line": 133,
            "name": "verify posts response result contains only filtered value as \"userId :\u003d 1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"userId :\u003d 1\"",
                  "offset": 61
                }
              ],
              "location": "stepDefinitions.PostsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:41.476Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 142,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-posts-endpoint;verification-of-search-results;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 982700,
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 965400,
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"id:\u003d1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"id:\u003d1\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 256439900,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/users/1/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/1/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 133,
            "name": "verify posts response result contains only filtered value as \"id:\u003d1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"id:\u003d1\"",
                  "offset": 61
                }
              ],
              "location": "stepDefinitions.PostsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:41.738Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 143,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-posts-endpoint;verification-of-search-results;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"title :\u003d sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"",
            "match": {
              "arguments": [
                {
                  "val": "\"title :\u003d sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 87448200,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/users/1/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/1/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 133,
            "name": "verify posts response result contains only filtered value as \"title :\u003d sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"",
            "match": {
              "arguments": [
                {
                  "val": "\"title :\u003d sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"",
                  "offset": 61
                }
              ],
              "location": "stepDefinitions.PostsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:41.830Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 144,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-posts-endpoint;verification-of-search-results;;9",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 126,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 965700,
              "status": "passed"
            },
            "line": 127,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 128,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 10750700,
              "status": "passed"
            },
            "line": 131,
            "name": "set the parameters as \"[POST_FILTER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[POST_FILTER]\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 258160100,
              "status": "passed"
            },
            "line": 132,
            "name": "Get the resources from endpoint \"/users/1/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/1/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11714400,
              "status": "passed"
            },
            "line": 133,
            "name": "verify posts response result contains only filtered value as \"[POST_FILTER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[POST_FILTER]\"",
                  "offset": 61
                }
              ],
              "location": "stepDefinitions.PostsSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:42.115Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 160,
        "name": "verification error messgaes for invalid search parameters",
        "description": "expecting 422 - Unprocessable entity",
        "id": "validation-of-posts-endpoint;verification-error-messgaes-for-invalid-search-parameters;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 148,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 149,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 150,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 970100,
              "status": "passed"
            },
            "line": 153,
            "name": "set the parameters as \"userId :\u003d @$\"",
            "match": {
              "arguments": [
                {
                  "val": "\"userId :\u003d @$\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 256297700,
              "status": "passed"
            },
            "line": 154,
            "name": "Get the resources from endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027422\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 422(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:155)\r\n",
              "status": "failed"
            },
            "line": 155,
            "name": "verify the status code is 422",
            "match": {
              "arguments": [
                {
                  "val": "422",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 156,
            "name": "verify the status text is \"Unprocessable entity\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Unprocessable entity\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:42.380Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 161,
        "name": "verification error messgaes for invalid search parameters",
        "description": "expecting 422 - Unprocessable entity",
        "id": "validation-of-posts-endpoint;verification-error-messgaes-for-invalid-search-parameters;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 983800,
              "status": "passed"
            },
            "line": 148,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 149,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 150,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 153,
            "name": "set the parameters as \"id:\u003d*\u0026%\"",
            "match": {
              "arguments": [
                {
                  "val": "\"id:\u003d*\u0026%\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 98287100,
              "status": "passed"
            },
            "line": 154,
            "name": "Get the resources from endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027422\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 422(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:155)\r\n",
              "status": "failed"
            },
            "line": 155,
            "name": "verify the status code is 422",
            "match": {
              "arguments": [
                {
                  "val": "422",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 974900,
              "status": "skipped"
            },
            "line": 156,
            "name": "verify the status text is \"Unprocessable entity\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Unprocessable entity\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:42.482Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 162,
        "name": "verification error messgaes for invalid search parameters",
        "description": "expecting 422 - Unprocessable entity",
        "id": "validation-of-posts-endpoint;verification-error-messgaes-for-invalid-search-parameters;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 976600,
              "status": "passed"
            },
            "line": 148,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 149,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 150,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 153,
            "name": "set the parameters as \"title :\u003d 4566@#$%^\u0026*8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"title :\u003d 4566@#$%^\u0026*8\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 261252000,
              "status": "passed"
            },
            "line": 154,
            "name": "Get the resources from endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027422\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 422(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:155)\r\n",
              "duration": 968100,
              "status": "failed"
            },
            "line": 155,
            "name": "verify the status code is 422",
            "match": {
              "arguments": [
                {
                  "val": "422",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 156,
            "name": "verify the status text is \"Unprocessable entity\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Unprocessable entity\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:42.749Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 163,
        "name": "verification error messgaes for invalid search parameters",
        "description": "expecting 422 - Unprocessable entity",
        "id": "validation-of-posts-endpoint;verification-error-messgaes-for-invalid-search-parameters;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 976900,
              "status": "passed"
            },
            "line": 148,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 149,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 150,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 153,
            "name": "set the parameters as \"email :\u003d *\u0026*\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d *\u0026*\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 275498900,
              "status": "passed"
            },
            "line": 154,
            "name": "Get the resources from endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027422\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 422(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/Validation.feature:155)\r\n",
              "status": "failed"
            },
            "line": 155,
            "name": "verify the status code is 422",
            "match": {
              "arguments": [
                {
                  "val": "422",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 156,
            "name": "verify the status text is \"Unprocessable entity\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Unprocessable entity\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:43.031Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 164,
        "name": "verification error messgaes for invalid search parameters",
        "description": "expecting 422 - Unprocessable entity",
        "id": "validation-of-posts-endpoint;verification-error-messgaes-for-invalid-search-parameters;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 148,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 975700,
              "status": "passed"
            },
            "line": 149,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 150,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 153,
            "name": "set the parameters as \"address :\u003d *\u0026*\"",
            "match": {
              "arguments": [
                {
                  "val": "\"address :\u003d *\u0026*\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 142203100,
              "status": "passed"
            },
            "line": 154,
            "name": "Get the resources from endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 155,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 156,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorPosts"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      }
    ],
    "name": "Validation of posts endpoint",
    "description": "",
    "id": "validation-of-posts-endpoint",
    "keyword": "Feature",
    "uri": "file:src/test/resources/FeatureFiles/Posts/Validation.feature",
    "tags": [
      {
        "name": "@error",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@errorPosts",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 8
        }
      },
      {
        "name": "@posts",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 20
        }
      },
      {
        "name": "@apiTesting",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 27
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 973000,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 979800,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:43.178Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 13,
        "name": "verify schema and status codes of Posts endpoint using GET method",
        "description": "",
        "id": "posts-schema-and-status-code-validation;verify-schema-and-status-codes-of-posts-endpoint-using-get-method",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 118906600,
              "status": "passed"
            },
            "line": 15,
            "name": "Get the resources from endpoint \"/posts/1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/1\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2920400,
              "status": "passed"
            },
            "line": 17,
            "name": "Validate the Json Schema for \"posts\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"posts\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaPosts"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 976800,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:43.307Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 19,
        "name": "verify schema and status codes of Posts collection endpoint using GET method",
        "description": "",
        "id": "posts-schema-and-status-code-validation;verify-schema-and-status-codes-of-posts-collection-endpoint-using-get-method",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 104153000,
              "status": "passed"
            },
            "line": 21,
            "name": "Get the resources from endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 972600,
              "status": "passed"
            },
            "line": 22,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7805200,
              "status": "passed"
            },
            "line": 23,
            "name": "Validate the Json Schema for \"posts\" collection endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"posts\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateCollectionEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaPosts"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 976700,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 984900,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:43.424Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 25,
        "name": "verify schema and status codes for posts endpoint when accessed posts from userid using GET method",
        "description": "",
        "id": "posts-schema-and-status-code-validation;verify-schema-and-status-codes-for-posts-endpoint-when-accessed-posts-from-userid-using-get-method",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 319015800,
              "status": "passed"
            },
            "line": 27,
            "name": "Get the resources from endpoint \"/users/1/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/1/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 28,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3903300,
              "status": "passed"
            },
            "line": 29,
            "name": "Validate the Json Schema for \"posts\" collection endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"posts\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateCollectionEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaPosts"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 972000,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 976700,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:43.752Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 31,
        "name": "verify schema and status codes for posts endpoint when accessed posts from query parameters for GET method",
        "description": "",
        "id": "posts-schema-and-status-code-validation;verify-schema-and-status-codes-for-posts-endpoint-when-accessed-posts-from-query-parameters-for-get-method",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 33,
            "name": "set the parameters as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_parameters_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 34,
              "value": "\tuserId :\u003d 1"
            }
          },
          {
            "result": {
              "duration": 272835500,
              "status": "passed"
            },
            "line": 37,
            "name": "Get the resources from endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 981900,
              "status": "passed"
            },
            "line": 38,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3907300,
              "status": "passed"
            },
            "line": 39,
            "name": "Validate the Json Schema for \"posts\" collection endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"posts\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateCollectionEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaPosts"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 975100,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:44.034Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 41,
        "name": "verify schema and status codes for posts endpoint when new posts is made using POST",
        "description": "",
        "id": "posts-schema-and-status-code-validation;verify-schema-and-status-codes-for-posts-endpoint-when-new-posts-is-made-using-post",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12694300,
              "status": "passed"
            },
            "line": 43,
            "name": "set request body for posts using data \"[VALID_POST]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 283995800,
              "status": "passed"
            },
            "line": 44,
            "name": "POST the resource to endpoint \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 45,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1957200,
              "status": "passed"
            },
            "line": 46,
            "name": "Validate the Json Schema for \"posts\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"posts\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaPosts"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 974200,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:44.337Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 48,
        "name": "verify schema and status codes for posts endpoint when new posts is made using PUT. Hence expecting status code 201",
        "description": "\t\tas per standards. 800 id is not available, so when PUT is called to it, they should create new object ",
        "id": "posts-schema-and-status-code-validation;verify-schema-and-status-codes-for-posts-endpoint-when-new-posts-is-made-using-put.-hence-expecting-status-code-201",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16605000,
              "status": "passed"
            },
            "line": 51,
            "name": "set request body for posts using data \"[VALID_POST]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 108437500,
              "status": "passed"
            },
            "line": 52,
            "name": "PUT the resource to endpoint \"/posts/800\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/800\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027404\u0027 differes from expected code \u0027201\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 201(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/schemaValidation.feature:53)\r\n",
              "status": "failed"
            },
            "line": 53,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 973600,
              "status": "skipped"
            },
            "line": 54,
            "name": "Validate the Json Schema for \"posts\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"posts\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaPosts"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 989700,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:44.465Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 56,
        "name": "verify schema and status codes for posts endpoint when posts is edited using PUT",
        "description": "",
        "id": "posts-schema-and-status-code-validation;verify-schema-and-status-codes-for-posts-endpoint-when-posts-is-edited-using-put",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13664900,
              "status": "passed"
            },
            "line": 58,
            "name": "set request body for posts using data \"[VALID_POST]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 100817300,
              "status": "passed"
            },
            "line": 59,
            "name": "PUT the resource to endpoint \"/posts/2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/2\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 983000,
              "status": "passed"
            },
            "line": 60,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2926200,
              "status": "passed"
            },
            "line": 61,
            "name": "Validate the Json Schema for \"posts\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"posts\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaPosts"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 973500,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:44.587Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 63,
        "name": "verify schema and status codes for posts endpoint when posts is modified using PATCH",
        "description": "",
        "id": "posts-schema-and-status-code-validation;verify-schema-and-status-codes-for-posts-endpoint-when-posts-is-modified-using-patch",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10754000,
              "status": "passed"
            },
            "line": 65,
            "name": "set request body for posts using data \"[VALID_POST]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_POST]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 297444000,
              "status": "passed"
            },
            "line": 66,
            "name": "PATCH the resource to endpoint \"/posts/3\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/3\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 974100,
              "status": "passed"
            },
            "line": 67,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3902900,
              "status": "passed"
            },
            "line": 68,
            "name": "Validate the Json Schema for \"posts\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"posts\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaPosts"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 975100,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:44.904Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 70,
        "name": "verify schema and status codes for posts endpoint when posts is deleted using DELETE",
        "description": "when 200 is returned, we expected deleted content to be returned",
        "id": "posts-schema-and-status-code-validation;verify-schema-and-status-codes-for-posts-endpoint-when-posts-is-deleted-using-delete",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 263876600,
              "status": "passed"
            },
            "line": 73,
            "name": "DELETE the resource to endpoint \"/posts/4\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/4\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 74,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nResponse body doesn\u0027t match expectation.\nExpected: The content to match the given JSON schema.\nerror: object has missing required properties ([\"body\",\"id\",\"title\",\"userId\"])\n    level: \"error\"\n    schema: {\"loadingURI\":\"#\",\"pointer\":\"\"}\n    instance: {\"pointer\":\"\"}\n    domain: \"validation\"\n    keyword: \"required\"\n    required: [\"body\",\"id\",\"title\",\"userId\"]\n    missing: [\"body\",\"id\",\"title\",\"userId\"]\n\n  Actual: {}\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:98)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:293)\r\n\tat io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)\r\n\tat functionalities.ReusableAPIFunction.validateSchema(ReusableAPIFunction.java:148)\r\n\tat stepDefinitions.ReusableSD.validateEndPointSchema(ReusableSD.java:74)\r\n\tat ✽.Validate the Json Schema for \"posts\" endpoint(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Posts/schemaValidation.feature:75)\r\n",
              "duration": 5876900,
              "status": "failed"
            },
            "line": 75,
            "name": "Validate the Json Schema for \"posts\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"posts\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaPosts"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@posts"
          },
          {
            "name": "@apiTesting"
          }
        ]
      }
    ],
    "name": "Posts Schema and Status Code validation",
    "description": "Verify json schema and status codes for posts endpoints of Jsonplaceholder api",
    "id": "posts-schema-and-status-code-validation",
    "keyword": "Feature",
    "uri": "file:src/test/resources/FeatureFiles/Posts/schemaValidation.feature",
    "tags": [
      {
        "name": "@schemaPosts",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SchemaValidation",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 14
        }
      },
      {
        "name": "@posts",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 32
        }
      },
      {
        "name": "@apiTesting",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 39
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 990000,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:45.181Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 13,
        "name": "Sunny Path Scenario",
        "description": " end to end crud flow for users",
        "id": "e2e-testing-of-users-endpoint;sunny-path-scenario",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13651800,
              "status": "passed"
            },
            "line": 16,
            "name": "set request body for users using data \"[VALID_USER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 254707600,
              "status": "passed"
            },
            "line": 17,
            "name": "POST the resource to endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17578900,
              "status": "passed"
            },
            "line": 19,
            "name": "verify response body of users with data \"[VALID_USER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER]\"",
                  "offset": 40
                }
              ],
              "location": "stepDefinitions.UsersSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 110144000,
              "status": "passed"
            },
            "line": 21,
            "name": "Get the resources from endpoint \"/users/[USER_ID]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/[USER_ID]\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027404\u0027 differes from expected code \u0027200\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 200(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/E2E.feature:22)\r\n",
              "status": "failed"
            },
            "line": 22,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "verify response body of users with data \"[VALID_USER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER]\"",
                  "offset": 40
                }
              ],
              "location": "stepDefinitions.UsersSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "set request body for users using data \"[VALID_USER_UPDATE]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER_UPDATE]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "PATCH the resource to endpoint \"/users/[USER_ID]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/[USER_ID]\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "verify response body of users with data \"[VALID_USER_UPDATE]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER_UPDATE]\"",
                  "offset": 40
                }
              ],
              "location": "stepDefinitions.UsersSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "DELETE the resource to endpoint \"/users/[USER_ID]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/[USER_ID]\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "Get the resources from endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "verify id \"[USER_ID]\" is not available in response",
            "match": {
              "arguments": [
                {
                  "val": "\"[USER_ID]\"",
                  "offset": 10
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_id_is_not_available_in_response(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@e2e"
          },
          {
            "name": "@e2eUsers"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:45.586Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 38,
        "name": "validate existing data when accesed using GET",
        "description": "",
        "id": "e2e-testing-of-users-endpoint;validate-existing-data-when-accesed-using-get",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 115025200,
              "status": "passed"
            },
            "line": 40,
            "name": "Get the resources from endpoint \"/users/1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/1\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 20501400,
              "status": "passed"
            },
            "line": 41,
            "name": "verify response body of users with data \"[VALID_USER_IN_SYS]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER_IN_SYS]\"",
                  "offset": 40
                }
              ],
              "location": "stepDefinitions.UsersSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@e2e"
          },
          {
            "name": "@e2eUsers"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 978900,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:45.725Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 43,
        "name": "validate lists of commensts does not have unknown post id",
        "description": "",
        "id": "e2e-testing-of-users-endpoint;validate-lists-of-commensts-does-not-have-unknown-post-id",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 98450900,
              "status": "passed"
            },
            "line": 45,
            "name": "Get the resources from endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 975300,
              "status": "passed"
            },
            "line": 46,
            "name": "verify id \"800\" is not available in response",
            "match": {
              "arguments": [
                {
                  "val": "\"800\"",
                  "offset": 10
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_id_is_not_available_in_response(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@e2e"
          },
          {
            "name": "@e2eUsers"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:45.828Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 49,
        "name": "validate response after patching. Changing values of post id  5",
        "description": "",
        "id": "e2e-testing-of-users-endpoint;validate-response-after-patching.-changing-values-of-post-id--5",
        "after": [
          {
            "result": {
              "duration": 974000,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12716100,
              "status": "passed"
            },
            "line": 51,
            "name": "set request body for posts using data \"[VALID_USER_IN_SYS]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER_IN_SYS]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.PostsSD.setPostRequestBody(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 100183900,
              "status": "passed"
            },
            "line": 52,
            "name": "PATCH the resource to endpoint \"/users/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/5\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 53,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: Maps do not match for key:name actual:Chelsey Dietrich expected:Leanne Graham\r\n\tat org.testng.Assert.fail(Assert.java:110)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1967)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1925)\r\n\tat functionalities.Users.verifyResponseJsonString(Users.java:76)\r\n\tat stepDefinitions.UsersSD.verify_response_body_of_users_with_data(UsersSD.java:17)\r\n\tat ✽.verify response body of users with data \"[VALID_USER_IN_SYS]\"(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/E2E.feature:54)\r\n",
              "duration": 20509100,
              "status": "failed"
            },
            "line": 54,
            "name": "verify response body of users with data \"[VALID_USER_IN_SYS]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER_IN_SYS]\"",
                  "offset": 40
                }
              ],
              "location": "stepDefinitions.UsersSD.verify_response_body_of_users_with_data(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@e2e"
          },
          {
            "name": "@e2eUsers"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      }
    ],
    "name": "E2E testing of users endpoint",
    "description": "Create, read, update and delete an user",
    "id": "e2e-testing-of-users-endpoint",
    "keyword": "Feature",
    "uri": "file:src/test/resources/FeatureFiles/Users/E2E.feature",
    "tags": [
      {
        "name": "@e2e",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@e2eUsers",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 6
        }
      },
      {
        "name": "@users",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 16
        }
      },
      {
        "name": "@apiTesting",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 23
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2022-07-30T14:38:45.966Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 18,
        "name": "provide invalid informations and validate expected error messages for GET methods",
        "description": "",
        "id": "validation-of-users-endpoint;provide-invalid-informations-and-validate-expected-error-messages-for-get-methods;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 971200,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 987200,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 272968200,
              "status": "passed"
            },
            "line": 12,
            "name": "Get the resources from endpoint \"/users/800\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/800\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:46.248Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 19,
        "name": "provide invalid informations and validate expected error messages for GET methods",
        "description": "",
        "id": "validation-of-users-endpoint;provide-invalid-informations-and-validate-expected-error-messages-for-get-methods;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 965100,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 92319100,
              "status": "passed"
            },
            "line": 12,
            "name": "Get the resources from endpoint \"/users/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:46.345Z",
        "before": [
          {
            "result": {
              "duration": 983400,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 20,
        "name": "provide invalid informations and validate expected error messages for GET methods",
        "description": "",
        "id": "validation-of-users-endpoint;provide-invalid-informations-and-validate-expected-error-messages-for-get-methods;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 273751300,
              "status": "passed"
            },
            "line": 12,
            "name": "Get the resources from endpoint \"/users?id\u003d5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users?id\u003d5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:46.622Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 37,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 25,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 976100,
              "status": "passed"
            },
            "line": 26,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 27,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 17135200,
              "status": "passed"
            },
            "line": 30,
            "name": "set request body for users using data \"[VALID_USER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 260706400,
              "status": "passed"
            },
            "line": 31,
            "name": "POST the resource to endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 32,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 33,
            "name": "verify the status text is \"Created\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Created\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:46.907Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 38,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 986000,
              "status": "passed"
            },
            "line": 25,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 26,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 27,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 30,
            "name": "set request body for users using data \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 287508600,
              "status": "passed"
            },
            "line": 31,
            "name": "POST the resource to endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027201\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:32)\r\n",
              "status": "failed"
            },
            "line": 32,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:47.199Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 39,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 968500,
              "status": "passed"
            },
            "line": 25,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 986500,
              "status": "passed"
            },
            "line": 26,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 27,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 30,
            "name": "set request body for users using data \"name :\u003dJo\"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003dJo\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 280444800,
              "status": "passed"
            },
            "line": 31,
            "name": "POST the resource to endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027201\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:32)\r\n",
              "status": "failed"
            },
            "line": 32,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:47.486Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 40,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 977500,
              "status": "passed"
            },
            "line": 25,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 26,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 27,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 971200,
              "status": "passed"
            },
            "line": 30,
            "name": "set request body for users using data \"body :\u003d asdgkldsg\"",
            "match": {
              "arguments": [
                {
                  "val": "\"body :\u003d asdgkldsg\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 295905200,
              "status": "passed"
            },
            "line": 31,
            "name": "POST the resource to endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027201\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:32)\r\n",
              "status": "failed"
            },
            "line": 32,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:47.786Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 41,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 985700,
              "status": "passed"
            },
            "line": 25,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 26,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 27,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 30,
            "name": "set request body for users using data \"email :\u003d asfkal@gssv.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d asfkal@gssv.com\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 249147100,
              "status": "passed"
            },
            "line": 31,
            "name": "POST the resource to endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027201\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:32)\r\n",
              "duration": 968300,
              "status": "failed"
            },
            "line": 32,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:48.041Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 42,
        "name": "provide valid, invalid informations or missing request body for create and validate expected error messages",
        "description": " Method - POST",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-and-validate-expected-error-messages;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 25,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 999400,
              "status": "passed"
            },
            "line": 26,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 27,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 10744900,
              "status": "passed"
            },
            "line": 30,
            "name": "set request body for users using data \"[INVALID_USER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[INVALID_USER]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 292711600,
              "status": "passed"
            },
            "line": 31,
            "name": "POST the resource to endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027201\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:32)\r\n",
              "duration": 954900,
              "status": "failed"
            },
            "line": 32,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:48.351Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 58,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;2",
        "after": [
          {
            "result": {
              "duration": 975800,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 988400,
              "status": "passed"
            },
            "line": 46,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 47,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 48,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 9754200,
              "status": "passed"
            },
            "line": 51,
            "name": "set request body for users using data \"[VALID_USER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 275164600,
              "status": "passed"
            },
            "line": 52,
            "name": "PUT the resource to endpoint \"/users/501\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/501\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027404\u0027 differes from expected code \u0027201\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 201(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:53)\r\n",
              "duration": 911400,
              "status": "failed"
            },
            "line": 53,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "verify the status text is \"Created\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Created\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:48.642Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 59,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 979500,
              "status": "passed"
            },
            "line": 46,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 47,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 48,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 9760600,
              "status": "passed"
            },
            "line": 51,
            "name": "set request body for users using data \"[VALID_USER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 113294300,
              "status": "passed"
            },
            "line": 52,
            "name": "PUT the resource to endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027201\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 201(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:53)\r\n",
              "status": "failed"
            },
            "line": 53,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "verify the status text is \"Created\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Created\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:48.770Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 60,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 46,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 47,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 48,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 51,
            "name": "set request body for users using data \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 105579100,
              "status": "passed"
            },
            "line": 52,
            "name": "PUT the resource to endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:53)\r\n",
              "duration": 972900,
              "status": "failed"
            },
            "line": 53,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:48.882Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 61,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 46,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 974300,
              "status": "passed"
            },
            "line": 47,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 48,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 51,
            "name": "set request body for users using data \"name :\u003dJo \"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003dJo \"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 111564300,
              "status": "passed"
            },
            "line": 52,
            "name": "PUT the resource to endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:53)\r\n",
              "duration": 954000,
              "status": "failed"
            },
            "line": 53,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:48.998Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 62,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 981200,
              "status": "passed"
            },
            "line": 46,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 47,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 48,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 51,
            "name": "set request body for users using data \"body :\u003d adgsd\"",
            "match": {
              "arguments": [
                {
                  "val": "\"body :\u003d adgsd\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91188500,
              "status": "passed"
            },
            "line": 52,
            "name": "PUT the resource to endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:53)\r\n",
              "status": "failed"
            },
            "line": 53,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:49.094Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 63,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 975200,
              "status": "passed"
            },
            "line": 46,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 47,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 48,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 51,
            "name": "set request body for users using data \"email :\u003d asfkal@gssv.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d asfkal@gssv.com\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94818800,
              "status": "passed"
            },
            "line": 52,
            "name": "PUT the resource to endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:53)\r\n",
              "status": "failed"
            },
            "line": 53,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:49.195Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 64,
        "name": "provide valid, invalid informations or missing request body for create or edit using PUT",
        "description": "and validate expected error messages - Method - PUT",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-create-or-edit-using-put;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 986100,
              "status": "passed"
            },
            "line": 46,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 47,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 48,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 10732500,
              "status": "passed"
            },
            "line": 51,
            "name": "set request body for users using data \"[INVALID_USER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[INVALID_USER]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 98537200,
              "status": "passed"
            },
            "line": 52,
            "name": "PUT the resource to endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:53)\r\n",
              "status": "failed"
            },
            "line": 53,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:49.309Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 80,
        "name": "provide valid ,invalid informations or missing request body for patching users",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-users;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 973500,
              "status": "passed"
            },
            "line": 68,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 69,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 70,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 11726100,
              "status": "passed"
            },
            "line": 73,
            "name": "set request body for users using data \"[VALID_USER_UPDATE]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER_UPDATE]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104918300,
              "status": "passed"
            },
            "line": 74,
            "name": "PATCH the resource to endpoint \"/users/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/5\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 75,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 966300,
              "status": "passed"
            },
            "line": 76,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:49.431Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 81,
        "name": "provide valid ,invalid informations or missing request body for patching users",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-users;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 68,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 978500,
              "status": "passed"
            },
            "line": 69,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 70,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 73,
            "name": "set request body for users using data \"name :\u003dJo\"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003dJo\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104342400,
              "status": "passed"
            },
            "line": 74,
            "name": "PATCH the resource to endpoint \"/users/6\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/6\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 75,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 944000,
              "status": "passed"
            },
            "line": 76,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:49.540Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 82,
        "name": "provide valid ,invalid informations or missing request body for patching users",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-users;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 68,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 974300,
              "status": "passed"
            },
            "line": 69,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 70,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 73,
            "name": "set request body for users using data \"body :\u003d adfgf\"",
            "match": {
              "arguments": [
                {
                  "val": "\"body :\u003d adfgf\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92786800,
              "status": "passed"
            },
            "line": 74,
            "name": "PATCH the resource to endpoint \"/users/7\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/7\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 958900,
              "status": "passed"
            },
            "line": 75,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 76,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:49.636Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 83,
        "name": "provide valid ,invalid informations or missing request body for patching users",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-users;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 973400,
              "status": "passed"
            },
            "line": 68,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 69,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 70,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 973500,
              "status": "passed"
            },
            "line": 73,
            "name": "set request body for users using data \"email :\u003d asfkal@gssv.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d asfkal@gssv.com\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93129400,
              "status": "passed"
            },
            "line": 74,
            "name": "PATCH the resource to endpoint \"/users/8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/8\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1005900,
              "status": "passed"
            },
            "line": 75,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 76,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:49.734Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 84,
        "name": "provide valid ,invalid informations or missing request body for patching users",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-users;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 969900,
              "status": "passed"
            },
            "line": 68,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 69,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 70,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 73,
            "name": "set request body for users using data \"email :\u003d asfkal@gssv.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d asfkal@gssv.com\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 276811500,
              "status": "passed"
            },
            "line": 74,
            "name": "PATCH the resource to endpoint \"/users/5000\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/5000\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 75,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 76,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:50.020Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 85,
        "name": "provide valid ,invalid informations or missing request body for patching users",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-users;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 68,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 974800,
              "status": "passed"
            },
            "line": 69,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 70,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 73,
            "name": "set request body for users using data \"email :\u003d asfkal@gssv.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d asfkal@gssv.com\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 87904800,
              "status": "passed"
            },
            "line": 74,
            "name": "PATCH the resource to endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027404\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 404(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:75)\r\n",
              "status": "failed"
            },
            "line": 75,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 965400,
              "status": "skipped"
            },
            "line": 76,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:50.112Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 86,
        "name": "provide valid ,invalid informations or missing request body for patching users",
        "description": "and validate expected error messages Method - PATCH   ",
        "id": "validation-of-users-endpoint;provide-valid--invalid-informations-or-missing-request-body-for-patching-users;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 976300,
              "status": "passed"
            },
            "line": 68,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 69,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 70,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 11752100,
              "status": "passed"
            },
            "line": 73,
            "name": "set request body for users using data \"[INVALID_USER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[INVALID_USER]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 256624600,
              "status": "passed"
            },
            "line": 74,
            "name": "PATCH the resource to endpoint \"/users/10\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/10\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027400\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 400(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:75)\r\n",
              "duration": 976300,
              "status": "failed"
            },
            "line": 75,
            "name": "verify the status code is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 76,
            "name": "verify the status text is \"Bad Request\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Bad Request\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:50.386Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 101,
        "name": "Delete users and validate responses",
        "description": "Method - DELETE",
        "id": "validation-of-users-endpoint;delete-users-and-validate-responses;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 983800,
              "status": "passed"
            },
            "line": 90,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 91,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 92,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 267712600,
              "status": "passed"
            },
            "line": 95,
            "name": "DELETE the resource to endpoint \"/users/800\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/800\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027404\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 404(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:96)\r\n",
              "status": "failed"
            },
            "line": 96,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 989500,
              "status": "skipped"
            },
            "line": 97,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:50.658Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 102,
        "name": "Delete users and validate responses",
        "description": "Method - DELETE",
        "id": "validation-of-users-endpoint;delete-users-and-validate-responses;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 979400,
              "status": "passed"
            },
            "line": 90,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 91,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 92,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 259245500,
              "status": "passed"
            },
            "line": 95,
            "name": "DELETE the resource to endpoint \"/users/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 96,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 967500,
              "status": "passed"
            },
            "line": 97,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:50.922Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 103,
        "name": "Delete users and validate responses",
        "description": "Method - DELETE",
        "id": "validation-of-users-endpoint;delete-users-and-validate-responses;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 90,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 91,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 92,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 261656300,
              "status": "passed"
            },
            "line": 95,
            "name": "DELETE the resource to endpoint \"/users/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027404\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 404(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:96)\r\n",
              "duration": 988900,
              "status": "failed"
            },
            "line": 96,
            "name": "verify the status code is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 97,
            "name": "verify the status text is \"Not Found\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Not Found\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:51.188Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 104,
        "name": "Delete users and validate responses",
        "description": "Method - DELETE",
        "id": "validation-of-users-endpoint;delete-users-and-validate-responses;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 966200,
              "status": "passed"
            },
            "line": 90,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 91,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 92,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 276737500,
              "status": "passed"
            },
            "line": 95,
            "name": "DELETE the resource to endpoint \"/users?id\u003d5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users?id\u003d5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027404\u0027 differes from expected code \u0027200\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 200(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:96)\r\n",
              "status": "failed"
            },
            "line": 96,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 97,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:51.470Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 119,
        "name": "response headers validations for users endpoints",
        "description": "",
        "id": "validation-of-users-endpoint;response-headers-validations-for-users-endpoints;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 982600,
              "status": "passed"
            },
            "line": 109,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 110,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 111,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 103800900,
              "status": "passed"
            },
            "line": 114,
            "name": "Get the resources from endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 969700,
              "status": "passed"
            },
            "line": 115,
            "name": "verify response headers \"Content-Type :\u003d application/json; charset\u003dutf-8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Content-Type :\u003d application/json; charset\u003dutf-8\"",
                  "offset": 24
                }
              ],
              "location": "stepDefinitions.ReusableSD.veriifyResponseHeaders(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:51.578Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 120,
        "name": "response headers validations for users endpoints",
        "description": "",
        "id": "validation-of-users-endpoint;response-headers-validations-for-users-endpoints;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 973200,
              "status": "passed"
            },
            "line": 109,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 110,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 111,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 162315600,
              "status": "passed"
            },
            "line": 114,
            "name": "Get the resources from endpoint \"/users/5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 956000,
              "status": "passed"
            },
            "line": 115,
            "name": "verify response headers \"Content-Type :\u003d application/json; charset\u003dutf-8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Content-Type :\u003d application/json; charset\u003dutf-8\"",
                  "offset": 24
                }
              ],
              "location": "stepDefinitions.ReusableSD.veriifyResponseHeaders(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:51.745Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 121,
        "name": "response headers validations for users endpoints",
        "description": "",
        "id": "validation-of-users-endpoint;response-headers-validations-for-users-endpoints;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 109,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 979700,
              "status": "passed"
            },
            "line": 110,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 111,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 93015100,
              "status": "passed"
            },
            "line": 114,
            "name": "Get the resources from endpoint \"/users?id\u003d5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users?id\u003d5\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 115,
            "name": "verify response headers \"Content-Type :\u003d application/json; charset\u003dutf-8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Content-Type :\u003d application/json; charset\u003dutf-8\"",
                  "offset": 24
                }
              ],
              "location": "stepDefinitions.ReusableSD.veriifyResponseHeaders(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:51.841Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 136,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-users-endpoint;verification-of-search-results;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 125,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 126,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 127,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 130,
            "name": "set the parameters as \"id:\u003d1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"id:\u003d1\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91947300,
              "status": "passed"
            },
            "line": 131,
            "name": "Get the resources from endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 967300,
              "status": "passed"
            },
            "line": 132,
            "name": "verify users response result contains only filtered value as \"id:\u003d1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"id:\u003d1\"",
                  "offset": 61
                }
              ],
              "location": "stepDefinitions.UsersSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:51.938Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 137,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-users-endpoint;verification-of-search-results;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 125,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 126,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 127,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 130,
            "name": "set the parameters as \"name :\u003d Leanne Graham\"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003d Leanne Graham\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 271521600,
              "status": "passed"
            },
            "line": 131,
            "name": "Get the resources from endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 978400,
              "status": "passed"
            },
            "line": 132,
            "name": "verify users response result contains only filtered value as \"name :\u003d Leanne Graham\"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003d Leanne Graham\"",
                  "offset": 61
                }
              ],
              "location": "stepDefinitions.UsersSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:52.216Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 138,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-users-endpoint;verification-of-search-results;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 125,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 971100,
              "status": "passed"
            },
            "line": 126,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 127,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 130,
            "name": "set the parameters as \"email :\u003d Sincere@april.biz\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d Sincere@april.biz\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 281857400,
              "status": "passed"
            },
            "line": 131,
            "name": "Get the resources from endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 978100,
              "status": "passed"
            },
            "line": 132,
            "name": "verify users response result contains only filtered value as \"email :\u003d Sincere@april.biz\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d Sincere@april.biz\"",
                  "offset": 61
                }
              ],
              "location": "stepDefinitions.UsersSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:52.502Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 139,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-users-endpoint;verification-of-search-results;;5",
        "after": [
          {
            "result": {
              "duration": 971100,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 974800,
              "status": "passed"
            },
            "line": 125,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 126,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 127,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 130,
            "name": "set the parameters as \"address.street :\u003d Kulas Light\"",
            "match": {
              "arguments": [
                {
                  "val": "\"address.street :\u003d Kulas Light\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 112086100,
              "status": "passed"
            },
            "line": 131,
            "name": "Get the resources from endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 972700,
              "status": "passed"
            },
            "line": 132,
            "name": "verify users response result contains only filtered value as \"address.street :\u003d Kulas Light\"",
            "match": {
              "arguments": [
                {
                  "val": "\"address.street :\u003d Kulas Light\"",
                  "offset": 61
                }
              ],
              "location": "stepDefinitions.UsersSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:52.620Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 140,
        "name": "verification of search results",
        "description": "",
        "id": "validation-of-users-endpoint;verification-of-search-results;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 969800,
              "status": "passed"
            },
            "line": 125,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 976000,
              "status": "passed"
            },
            "line": 126,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 127,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "duration": 11715100,
              "status": "passed"
            },
            "line": 130,
            "name": "set the parameters as \"[USER_FILTER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[USER_FILTER]\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103515500,
              "status": "passed"
            },
            "line": 131,
            "name": "Get the resources from endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 13683200,
              "status": "passed"
            },
            "line": 132,
            "name": "verify users response result contains only filtered value as \"[USER_FILTER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[USER_FILTER]\"",
                  "offset": 61
                }
              ],
              "location": "stepDefinitions.UsersSD.verifyResponseSearchResult(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:52.754Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 156,
        "name": "verification error messgaes for invalid search parameters",
        "description": "expecting 422 - Unprocessable entity",
        "id": "validation-of-users-endpoint;verification-error-messgaes-for-invalid-search-parameters;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 962300,
              "status": "passed"
            },
            "line": 144,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 981200,
              "status": "passed"
            },
            "line": 145,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 146,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 149,
            "name": "set the parameters as \"id:\u003d*\u0026%\"",
            "match": {
              "arguments": [
                {
                  "val": "\"id:\u003d*\u0026%\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89862100,
              "status": "passed"
            },
            "line": 150,
            "name": "Get the resources from endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027422\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 422(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:151)\r\n",
              "status": "failed"
            },
            "line": 151,
            "name": "verify the status code is 422",
            "match": {
              "arguments": [
                {
                  "val": "422",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 152,
            "name": "verify the status text is \"Unprocessable entity\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Unprocessable entity\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:52.851Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 157,
        "name": "verification error messgaes for invalid search parameters",
        "description": "expecting 422 - Unprocessable entity",
        "id": "validation-of-users-endpoint;verification-error-messgaes-for-invalid-search-parameters;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 577700,
              "status": "passed"
            },
            "line": 144,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 943500,
              "status": "passed"
            },
            "line": 145,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 146,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 149,
            "name": "set the parameters as \"name :\u003d 4566@#$%^\u0026*8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"name :\u003d 4566@#$%^\u0026*8\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 250675100,
              "status": "passed"
            },
            "line": 150,
            "name": "Get the resources from endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027422\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 422(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:151)\r\n",
              "duration": 949200,
              "status": "failed"
            },
            "line": 151,
            "name": "verify the status code is 422",
            "match": {
              "arguments": [
                {
                  "val": "422",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 152,
            "name": "verify the status text is \"Unprocessable entity\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Unprocessable entity\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:53.108Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 158,
        "name": "verification error messgaes for invalid search parameters",
        "description": "expecting 422 - Unprocessable entity",
        "id": "validation-of-users-endpoint;verification-error-messgaes-for-invalid-search-parameters;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 144,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 145,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 146,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 149,
            "name": "set the parameters as \"email :\u003d *\u0026*\"",
            "match": {
              "arguments": [
                {
                  "val": "\"email :\u003d *\u0026*\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 256434600,
              "status": "passed"
            },
            "line": 150,
            "name": "Get the resources from endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027200\u0027 differes from expected code \u0027422\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 422(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/Validation.feature:151)\r\n",
              "duration": 1016000,
              "status": "failed"
            },
            "line": 151,
            "name": "verify the status code is 422",
            "match": {
              "arguments": [
                {
                  "val": "422",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 152,
            "name": "verify the status text is \"Unprocessable entity\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Unprocessable entity\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:53.369Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 159,
        "name": "verification error messgaes for invalid search parameters",
        "description": "expecting 422 - Unprocessable entity",
        "id": "validation-of-users-endpoint;verification-error-messgaes-for-invalid-search-parameters;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 144,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 979000,
              "status": "passed"
            },
            "line": 145,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 146,
              "value": "\tContent-type :\u003d application/json"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 149,
            "name": "set the parameters as \"address :\u003d *\u0026*\"",
            "match": {
              "arguments": [
                {
                  "val": "\"address :\u003d *\u0026*\"",
                  "offset": 22
                }
              ],
              "location": "stepDefinitions.ReusableSD.set_the_parameters_asString(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 277894400,
              "status": "passed"
            },
            "line": 150,
            "name": "Get the resources from endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 151,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 955700,
              "status": "passed"
            },
            "line": 152,
            "name": "verify the status text is \"Ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ok\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_text_is(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@error"
          },
          {
            "name": "@errorComments"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      }
    ],
    "name": "Validation of users endpoint",
    "description": "",
    "id": "validation-of-users-endpoint",
    "keyword": "Feature",
    "uri": "file:src/test/resources/FeatureFiles/Users/Validation.feature",
    "tags": [
      {
        "name": "@error",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@errorComments",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 8
        }
      },
      {
        "name": "@users",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 23
        }
      },
      {
        "name": "@apiTesting",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 30
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 979900,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:53.651Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 13,
        "name": "verify schema and status codes of users endpoint using GET method",
        "description": "",
        "id": "users-schema-and-status-code-validation;verify-schema-and-status-codes-of-users-endpoint-using-get-method",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 105691100,
              "status": "passed"
            },
            "line": 15,
            "name": "Get the resources from endpoint \"/users/1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/1\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 125077900,
              "status": "passed"
            },
            "line": 17,
            "name": "Validate the Json Schema for \"users\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"users\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaUsers"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 976500,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:53.888Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 19,
        "name": "verify schema and status codes of users collection endpoint using GET method",
        "description": "",
        "id": "users-schema-and-status-code-validation;verify-schema-and-status-codes-of-users-collection-endpoint-using-get-method",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 90747200,
              "status": "passed"
            },
            "line": 21,
            "name": "Get the resources from endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 22,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7794700,
              "status": "passed"
            },
            "line": 23,
            "name": "Validate the Json Schema for \"users\" collection endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"users\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateCollectionEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaUsers"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 984400,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 959400,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:53.988Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 25,
        "name": "verify schema and status codes for users endpoint when accessed users from query parameters for GET method",
        "description": "",
        "id": "users-schema-and-status-code-validation;verify-schema-and-status-codes-for-users-endpoint-when-accessed-users-from-query-parameters-for-get-method",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1956300,
              "status": "passed"
            },
            "line": 27,
            "name": "set the parameters as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_parameters_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 28,
              "value": "\tid :\u003d 1"
            }
          },
          {
            "result": {
              "duration": 265453800,
              "status": "passed"
            },
            "line": 31,
            "name": "Get the resources from endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.access_the_endpoint(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 32,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4801700,
              "status": "passed"
            },
            "line": 33,
            "name": "Validate the Json Schema for \"users\" collection endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"users\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateCollectionEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaUsers"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 976500,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:54.267Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 35,
        "name": "verify schema and status codes for users endpoint when new users is made using POST",
        "description": "",
        "id": "users-schema-and-status-code-validation;verify-schema-and-status-codes-for-users-endpoint-when-new-users-is-made-using-post",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16601900,
              "status": "passed"
            },
            "line": 37,
            "name": "set request body for users using data \"[VALID_USER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 292847900,
              "status": "passed"
            },
            "line": 38,
            "name": "POST the resource to endpoint \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinitions.ReusableSD.post(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 39,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5832600,
              "status": "passed"
            },
            "line": 40,
            "name": "Validate the Json Schema for \"users\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"users\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaUsers"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 976000,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:54.584Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 42,
        "name": "verify schema and status codes for users endpoint when new users is made using PUT. Hence expecting status code 201",
        "description": "\t\tas per standards. 15 id is not available, so when PUT is called to it, they should create new object ",
        "id": "users-schema-and-status-code-validation;verify-schema-and-status-codes-for-users-endpoint-when-new-users-is-made-using-put.-hence-expecting-status-code-201",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12728500,
              "status": "passed"
            },
            "line": 45,
            "name": "set request body for users using data \"[VALID_USER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 91760100,
              "status": "passed"
            },
            "line": 46,
            "name": "PUT the resource to endpoint \"/users/15\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/15\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "frameworkFunctionality.UserException: Assertion Failed: Response status code \u0027404\u0027 differes from expected code \u0027201\u0027 \r\n\tat functionalities.ReusableAPIFunction.validateStatusCode(ReusableAPIFunction.java:108)\r\n\tat stepDefinitions.ReusableSD.verify_the_status_code_is(ReusableSD.java:59)\r\n\tat ✽.verify the status code is 201(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/schemaValidation.feature:47)\r\n",
              "status": "failed"
            },
            "line": 47,
            "name": "verify the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "Validate the Json Schema for \"users\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"users\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaUsers"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 985200,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 972000,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:54.695Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 50,
        "name": "verify schema and status codes for users endpoint when users is edited using PUT",
        "description": "",
        "id": "users-schema-and-status-code-validation;verify-schema-and-status-codes-for-users-endpoint-when-users-is-edited-using-put",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11734100,
              "status": "passed"
            },
            "line": 52,
            "name": "set request body for users using data \"[VALID_USER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 104316400,
              "status": "passed"
            },
            "line": 53,
            "name": "PUT the resource to endpoint \"/users/2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/2\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.put(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 54,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4884800,
              "status": "passed"
            },
            "line": 55,
            "name": "Validate the Json Schema for \"users\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"users\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaUsers"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 977300,
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:54.821Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 57,
        "name": "verify schema and status codes for users endpoint when users is modified using PATCH",
        "description": "",
        "id": "users-schema-and-status-code-validation;verify-schema-and-status-codes-for-users-endpoint-when-users-is-modified-using-patch",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10745600,
              "status": "passed"
            },
            "line": 59,
            "name": "set request body for users using data \"[VALID_USER]\"",
            "match": {
              "arguments": [
                {
                  "val": "\"[VALID_USER]\"",
                  "offset": 38
                }
              ],
              "location": "stepDefinitions.UsersSD.setUserRequstBody(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 105231600,
              "status": "passed"
            },
            "line": 60,
            "name": "PATCH the resource to endpoint \"/users/3\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/3\"",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.ReusableSD.patch(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 61,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5863300,
              "status": "passed"
            },
            "line": 62,
            "name": "Validate the Json Schema for \"users\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"users\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaUsers"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      },
      {
        "line": 5,
        "name": "Runs before every scenarios.",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 976100,
              "status": "passed"
            },
            "line": 7,
            "name": "I access the URL \"BASE_URI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"BASE_URI\"",
                  "offset": 17
                }
              ],
              "location": "stepDefinitions.ReusableSD.i_access_the_URL(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "set the headers as",
            "match": {
              "location": "stepDefinitions.ReusableSD.set_the_headers_as(java.lang.String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 9,
              "value": "\tContent-type :\u003d application/json"
            }
          }
        ]
      },
      {
        "start_timestamp": "2022-07-30T14:38:54.945Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.beforeScenarioStart()"
            }
          }
        ],
        "line": 64,
        "name": "verify schema and status codes for users endpoint when users is deleted using DELETE",
        "description": "\twhen 200 is returned, we expected deleted content to be returned",
        "id": "users-schema-and-status-code-validation;verify-schema-and-status-codes-for-users-endpoint-when-users-is-deleted-using-delete",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.afterScenarioFinish()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 280397300,
              "status": "passed"
            },
            "line": 67,
            "name": "DELETE the resource to endpoint \"/users/4\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/4\"",
                  "offset": 32
                }
              ],
              "location": "stepDefinitions.ReusableSD.delete(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 68,
            "name": "verify the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.ReusableSD.verify_the_status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nResponse body doesn\u0027t match expectation.\nExpected: The content to match the given JSON schema.\nerror: object has missing required properties ([\"address\",\"company\",\"email\",\"id\",\"name\",\"phone\",\"username\",\"website\"])\n    level: \"error\"\n    schema: {\"loadingURI\":\"#\",\"pointer\":\"\"}\n    instance: {\"pointer\":\"\"}\n    domain: \"validation\"\n    keyword: \"required\"\n    required: [\"address\",\"company\",\"email\",\"id\",\"name\",\"phone\",\"username\",\"website\"]\n    missing: [\"address\",\"company\",\"email\",\"id\",\"name\",\"phone\",\"username\",\"website\"]\n\n  Actual: {}\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor161.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:98)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:293)\r\n\tat io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)\r\n\tat functionalities.ReusableAPIFunction.validateSchema(ReusableAPIFunction.java:148)\r\n\tat stepDefinitions.ReusableSD.validateEndPointSchema(ReusableSD.java:74)\r\n\tat ✽.Validate the Json Schema for \"users\" endpoint(file:///C:/Users/Alwin%20Joseph/eclipse-workspace/ApiTestingAssignment/src/test/resources/FeatureFiles/Users/schemaValidation.feature:69)\r\n",
              "duration": 2925100,
              "status": "failed"
            },
            "line": 69,
            "name": "Validate the Json Schema for \"users\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"users\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinitions.ReusableSD.validateEndPointSchema(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@schemaUsers"
          },
          {
            "name": "@SchemaValidation"
          },
          {
            "name": "@users"
          },
          {
            "name": "@apiTesting"
          }
        ]
      }
    ],
    "name": "Users Schema and Status Code validation",
    "description": "Verify json schema and status codes for users endpoints of Jsonplaceholder api",
    "id": "users-schema-and-status-code-validation",
    "keyword": "Feature",
    "uri": "file:src/test/resources/FeatureFiles/Users/schemaValidation.feature",
    "tags": [
      {
        "name": "@schemaUsers",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SchemaValidation",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 14
        }
      },
      {
        "name": "@users",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 32
        }
      },
      {
        "name": "@apiTesting",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 39
        }
      }
    ]
  }
]